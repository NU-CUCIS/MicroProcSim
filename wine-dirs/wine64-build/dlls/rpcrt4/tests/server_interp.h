/*** Autogenerated by WIDL 8.0-rc1 from ../wine-source/dlls/rpcrt4/tests/server_interp.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __server_interp_h__
#define __server_interp_h__

#ifndef __WIDL_INLINE
#if defined(__cplusplus) || defined(_MSC_VER)
#define __WIDL_INLINE inline
#elif defined(__GNUC__)
#define __WIDL_INLINE __inline__
#endif
#endif

/* Forward declarations */

/* Headers for imported files */

#include <objidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef SKIP_TYPE_DECLS
typedef struct tag_vector {
    int x;
    int y;
    int z;
} vector_t;
typedef int fnprintf(const char *format, ...);
#endif
/*****************************************************************************
 * IInterpServer interface (v0.0)
 */
#ifndef __IInterpServer_INTERFACE_DEFINED__
#define __IInterpServer_INTERFACE_DEFINED__

extern handle_t IInterpServer_IfHandle;
extern RPC_IF_HANDLE interp_IInterpServer_v0_0_c_ifspec;
extern RPC_IF_HANDLE s_IInterpServer_v0_0_s_ifspec;
#if 0
typedef wchar_t WCHAR;
#endif
#ifndef SKIP_TYPE_DECLS
typedef char *str_t;
typedef WCHAR *wstr_t;
typedef struct __WIDL_server_interp_generated_name_0000000D {
    int *pi;
    int **ppi;
    int ***pppi;
} pints_t;
typedef struct __WIDL_server_interp_generated_name_0000000E {
    char *pc;
    short *ps;
    LONG *pl;
    float *pf;
    double *pd;
} ptypes_t;
typedef struct __WIDL_server_interp_generated_name_0000000F {
    vector_t *pu;
    vector_t **pv;
} pvectors_t;
typedef struct __WIDL_server_interp_generated_name_00000010 {
    union {
        int i;
        float f;
        int *pi;
    } u;
    int s;
} sun_t;
#endif
/* client prototype */
int __cdecl interp_int_return(
    void);

/* server prototype */
int __cdecl s_int_return(
    void);

/* client prototype */
int __cdecl interp_square(
    int x);

/* server prototype */
int __cdecl s_square(
    int x);

/* client prototype */
int __cdecl interp_sum(
    int x,
    int y);

/* server prototype */
int __cdecl s_sum(
    int x,
    int y);

/* client prototype */
signed char __cdecl interp_sum_char(
    signed char x,
    signed char y);

/* server prototype */
signed char __cdecl s_sum_char(
    signed char x,
    signed char y);

/* client prototype */
short __cdecl interp_sum_short(
    short x,
    short y);

/* server prototype */
short __cdecl s_sum_short(
    short x,
    short y);

/* client prototype */
int __cdecl interp_sum_float(
    float x,
    float y);

/* server prototype */
int __cdecl s_sum_float(
    float x,
    float y);

/* client prototype */
int __cdecl interp_sum_double_int(
    int x,
    double y);

/* server prototype */
int __cdecl s_sum_double_int(
    int x,
    double y);

/* client prototype */
hyper __cdecl interp_sum_hyper(
    hyper x,
    hyper y);

/* server prototype */
hyper __cdecl s_sum_hyper(
    hyper x,
    hyper y);

/* client prototype */
int __cdecl interp_sum_hyper_int(
    hyper x,
    hyper y);

/* server prototype */
int __cdecl s_sum_hyper_int(
    hyper x,
    hyper y);

/* client prototype */
int __cdecl interp_sum_char_hyper(
    signed char x,
    hyper y);

/* server prototype */
int __cdecl s_sum_char_hyper(
    signed char x,
    hyper y);

/* client prototype */
void __cdecl interp_square_out(
    int x,
    int *y);

/* server prototype */
void __cdecl s_square_out(
    int x,
    int *y);

/* client prototype */
void __cdecl interp_square_ref(
    int *x);

/* server prototype */
void __cdecl s_square_ref(
    int *x);

/* client prototype */
int __cdecl interp_str_length(
    const char *s);

/* server prototype */
int __cdecl s_str_length(
    const char *s);

/* client prototype */
int __cdecl interp_str_t_length(
    str_t s);

/* server prototype */
int __cdecl s_str_t_length(
    str_t s);

/* client prototype */
int __cdecl interp_cstr_length(
    const char *s,
    int n);

/* server prototype */
int __cdecl s_cstr_length(
    const char *s,
    int n);

/* client prototype */
int __cdecl interp_dot_self(
    vector_t *v);

/* server prototype */
int __cdecl s_dot_self(
    vector_t *v);

/* client prototype */
double __cdecl interp_square_half(
    double x,
    double *y);

/* server prototype */
double __cdecl s_square_half(
    double x,
    double *y);

/* client prototype */
float __cdecl interp_square_half_float(
    float x,
    float *y);

/* server prototype */
float __cdecl s_square_half_float(
    float x,
    float *y);

/* client prototype */
LONG __cdecl interp_square_half_long(
    LONG x,
    LONG *y);

/* server prototype */
LONG __cdecl s_square_half_long(
    LONG x,
    LONG *y);

/* client prototype */
int __cdecl interp_sum_fixed_array(
    int a[5]);

/* server prototype */
int __cdecl s_sum_fixed_array(
    int a[5]);

/* client prototype */
int __cdecl interp_pints_sum(
    pints_t *pints);

/* server prototype */
int __cdecl s_pints_sum(
    pints_t *pints);

/* client prototype */
double __cdecl interp_ptypes_sum(
    ptypes_t *ptypes);

/* server prototype */
double __cdecl s_ptypes_sum(
    ptypes_t *ptypes);

/* client prototype */
int __cdecl interp_dot_pvectors(
    pvectors_t *pvectors);

/* server prototype */
int __cdecl s_dot_pvectors(
    pvectors_t *pvectors);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000011 {
    int x;
} sp_inner_t;
typedef struct __WIDL_server_interp_generated_name_00000012 {
    int x;
    sp_inner_t *s;
} sp_t;
#endif
/* client prototype */
int __cdecl interp_sum_sp(
    sp_t *sp);

/* server prototype */
int __cdecl s_sum_sp(
    sp_t *sp);

/* client prototype */
double __cdecl interp_square_sun(
    sun_t *su);

/* server prototype */
double __cdecl s_square_sun(
    sun_t *su);

#ifndef SKIP_TYPE_DECLS
typedef struct test_list {
    int t;
    union {
        char x;
        struct test_list *tail;
    } u;
} test_list_t;
typedef int *refpint_t;
#endif
/* client prototype */
int __cdecl interp_test_list_length(
    test_list_t *ls);

/* server prototype */
int __cdecl s_test_list_length(
    test_list_t *ls);

/* client prototype */
int __cdecl interp_sum_fixed_int_3d(
    int m[2][3][4]);

/* server prototype */
int __cdecl s_sum_fixed_int_3d(
    int m[2][3][4]);

/* client prototype */
int __cdecl interp_sum_conf_array(
    int x[],
    int n);

/* server prototype */
int __cdecl s_sum_conf_array(
    int x[],
    int n);

/* client prototype */
int __cdecl interp_sum_conf_ptr_by_conf_ptr(
    int n1,
    int *n2_then_x1,
    int *x2);

/* server prototype */
int __cdecl s_sum_conf_ptr_by_conf_ptr(
    int n1,
    int *n2_then_x1,
    int *x2);

/* client prototype */
int __cdecl interp_sum_unique_conf_array(
    int x[],
    int n);

/* server prototype */
int __cdecl s_sum_unique_conf_array(
    int x[],
    int n);

/* client prototype */
int __cdecl interp_sum_unique_conf_ptr(
    int *x,
    int n);

/* server prototype */
int __cdecl s_sum_unique_conf_ptr(
    int *x,
    int n);

/* client prototype */
int __cdecl interp_sum_var_array(
    int x[20],
    int n);

/* server prototype */
int __cdecl s_sum_var_array(
    int x[20],
    int n);

/* client prototype */
int __cdecl interp_dot_two_vectors(
    vector_t vs[2]);

/* server prototype */
int __cdecl s_dot_two_vectors(
    vector_t vs[2]);

/* client prototype */
void __cdecl interp_get_number_array(
    int x[20],
    int *n);

/* server prototype */
void __cdecl s_get_number_array(
    int x[20],
    int *n);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000013 {
    int n;
    int ca[1];
} cs_t;
typedef struct __WIDL_server_interp_generated_name_00000014 {
    int n;
    int *ca;
} cs_blob_t;
typedef struct __WIDL_server_interp_generated_name_00000015 {
    cs_blob_t blob;
} cs_data_t;
typedef struct __WIDL_server_interp_generated_name_00000016 {
    cs_data_t data;
} cs_container_t;
typedef struct __WIDL_server_interp_generated_name_00000017 {
    int *pn;
    int *ca1;
    int *ca2;
    int n;
} cps_t;
typedef struct __WIDL_server_interp_generated_name_00000018 {
    int *ca;
    int a;
    int b;
    int c;
} cpsc_t;
#endif
/* client prototype */
int __cdecl interp_sum_cs(
    cs_t *cs);

/* server prototype */
int __cdecl s_sum_cs(
    cs_t *cs);

/* client prototype */
int __cdecl interp_sum_cps(
    cps_t *cps);

/* server prototype */
int __cdecl s_sum_cps(
    cps_t *cps);

/* client prototype */
int __cdecl interp_sum_cpsc(
    cpsc_t *cpsc);

/* server prototype */
int __cdecl s_sum_cpsc(
    cpsc_t *cpsc);

/* client prototype */
int __cdecl interp_get_cpsc(
    int n,
    cpsc_t *cpsc);

/* server prototype */
int __cdecl s_get_cpsc(
    int n,
    cpsc_t *cpsc);

/* client prototype */
int __cdecl interp_sum_complex_array(
    int n,
    refpint_t pi[]);

/* server prototype */
int __cdecl s_sum_complex_array(
    int n,
    refpint_t pi[]);

/* client prototype */
int __cdecl interp_sum_blob(
    cs_blob_t *blob);

/* server prototype */
int __cdecl s_sum_blob(
    cs_blob_t *blob);

/* client prototype */
int __cdecl interp_sum_data(
    cs_data_t *data);

/* server prototype */
int __cdecl s_sum_data(
    cs_data_t *data);

/* client prototype */
int __cdecl interp_sum_container(
    cs_container_t *container);

/* server prototype */
int __cdecl s_sum_container(
    cs_container_t *container);

#ifndef SKIP_TYPE_DECLS
typedef void *puint_t;
#endif
/* client prototype */
int __cdecl interp_square_puint(
    puint_t p);

/* server prototype */
int __cdecl s_square_puint(
    puint_t p);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000019 {
    puint_t *ps;
    int n;
} puints_t;
typedef struct __WIDL_server_interp_generated_name_0000001A {
    puint_t *ps;
    char n;
} cpuints_t;
#endif
/* client prototype */
int __cdecl interp_sum_puints(
    puints_t *p);

/* server prototype */
int __cdecl s_sum_puints(
    puints_t *p);

/* client prototype */
int __cdecl interp_sum_cpuints(
    cpuints_t *p);

/* server prototype */
int __cdecl s_sum_cpuints(
    cpuints_t *p);

/* client prototype */
int __cdecl interp_dot_copy_vectors(
    vector_t u,
    vector_t v);

/* server prototype */
int __cdecl s_dot_copy_vectors(
    vector_t u,
    vector_t v);

#ifndef SKIP_TYPE_DECLS
typedef struct wire_us *wire_us_t;
typedef struct us us_t;
struct us {
    void *x;
};
struct wire_us {
    int x;
};
typedef struct __WIDL_server_interp_generated_name_0000001B {
    us_t us;
} test_us_t;
#endif
/* client prototype */
int __cdecl interp_square_test_us(
    test_us_t *tus);

/* server prototype */
int __cdecl s_square_test_us(
    test_us_t *tus);

#ifndef SKIP_TYPE_DECLS
typedef struct encu {
    int t;
    union __WIDL_server_interp_generated_name_0000001C {
        int i;
        float f;
    } tagged_union;
} encu_t;
typedef union unencu {
    int i;
    float f;
} unencu_t;
typedef enum __WIDL_server_interp_generated_name_0000001D {
    E1 = 23,
    E2 = 4,
    E3 = 0,
    E4 = 64
} e_t;
typedef struct encue {
    e_t t;
    union __WIDL_server_interp_generated_name_0000001E {
        int i1;
        float f2;
    } tagged_union;
} encue_t;
typedef struct __WIDL_server_interp_generated_name_0000001F {
    e_t f;
} se_t;
#endif
/* client prototype */
double __cdecl interp_square_encu(
    encu_t *eu);

/* server prototype */
double __cdecl s_square_encu(
    encu_t *eu);

/* client prototype */
double __cdecl interp_square_unencu(
    int t,
    unencu_t *eu);

/* server prototype */
double __cdecl s_square_unencu(
    int t,
    unencu_t *eu);

/* client prototype */
int __cdecl interp_sum_parr(
    int * a[3]);

/* server prototype */
int __cdecl s_sum_parr(
    int * a[3]);

/* client prototype */
int __cdecl interp_sum_pcarr(
    int * a[],
    int n);

/* server prototype */
int __cdecl s_sum_pcarr(
    int * a[],
    int n);

/* client prototype */
int __cdecl interp_enum_ord(
    e_t e);

/* server prototype */
int __cdecl s_enum_ord(
    e_t e);

/* client prototype */
double __cdecl interp_square_encue(
    encue_t *eue);

/* server prototype */
double __cdecl s_square_encue(
    encue_t *eue);

/* client prototype */
void __cdecl interp_check_se2(
    se_t *s);

/* server prototype */
void __cdecl s_check_se2(
    se_t *s);

/* client prototype */
int __cdecl interp_sum_toplev_conf_2n(
    int *x,
    int n);

/* server prototype */
int __cdecl s_sum_toplev_conf_2n(
    int *x,
    int n);

/* client prototype */
int __cdecl interp_sum_toplev_conf_cond(
    int *x,
    int a,
    int b,
    int c);

/* server prototype */
int __cdecl s_sum_toplev_conf_cond(
    int *x,
    int a,
    int b,
    int c);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000020 {
    char c;
    int i;
    short s;
    double d;
} aligns_t;
#endif
/* client prototype */
double __cdecl interp_sum_aligns(
    aligns_t *a);

/* server prototype */
double __cdecl s_sum_aligns(
    aligns_t *a);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000021 {
    int i;
    char c;
} padded_t;
#endif
/* client prototype */
int __cdecl interp_sum_padded(
    padded_t *p);

/* server prototype */
int __cdecl s_sum_padded(
    padded_t *p);

/* client prototype */
int __cdecl interp_sum_padded2(
    padded_t ps[2]);

/* server prototype */
int __cdecl s_sum_padded2(
    padded_t ps[2]);

/* client prototype */
int __cdecl interp_sum_padded_conf(
    padded_t *ps,
    int n);

/* server prototype */
int __cdecl s_sum_padded_conf(
    padded_t *ps,
    int n);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000022 {
    int *p1;
} bogus_helper_t;
typedef struct __WIDL_server_interp_generated_name_00000023 {
    bogus_helper_t h;
    int *p2;
    int *p3;
    char c;
} bogus_t;
#endif
/* client prototype */
int __cdecl interp_sum_bogus(
    bogus_t *b);

/* server prototype */
int __cdecl s_sum_bogus(
    bogus_t *b);

/* client prototype */
void __cdecl interp_check_null(
    int *null);

/* server prototype */
void __cdecl s_check_null(
    int *null);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000024 {
    str_t s;
} str_struct_t;
typedef struct __WIDL_server_interp_generated_name_00000025 {
    wstr_t s;
} wstr_struct_t;
#endif
/* client prototype */
int __cdecl interp_str_struct_len(
    str_struct_t *s);

/* server prototype */
int __cdecl s_str_struct_len(
    str_struct_t *s);

/* client prototype */
int __cdecl interp_wstr_struct_len(
    wstr_struct_t *s);

/* server prototype */
int __cdecl s_wstr_struct_len(
    wstr_struct_t *s);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000026 {
    unsigned int n;
    byte a[1];
} doub_carr_1_t;
typedef struct __WIDL_server_interp_generated_name_00000027 {
    int n;
    doub_carr_1_t * a[1];
} doub_carr_t;
#endif
/* client prototype */
int __cdecl interp_sum_doub_carr(
    doub_carr_t *dc);

/* server prototype */
int __cdecl s_sum_doub_carr(
    doub_carr_t *dc);

/* client prototype */
void __cdecl interp_make_pyramid_doub_carr(
    unsigned char n,
    doub_carr_t **dc);

/* server prototype */
void __cdecl s_make_pyramid_doub_carr(
    unsigned char n,
    doub_carr_t **dc);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000028 {
    short n;
    short data[1];
} user_bstr_t;
typedef user_bstr_t *wire_bstr_t;
typedef short *bstr_t;
#endif
/* client prototype */
unsigned int __cdecl interp_hash_bstr(
    bstr_t s);

/* server prototype */
unsigned int __cdecl s_hash_bstr(
    bstr_t s);

/* client prototype */
void __cdecl interp_get_a_bstr(
    bstr_t *s);

/* server prototype */
void __cdecl s_get_a_bstr(
    bstr_t *s);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_00000029 {
    char *name;
    unsigned int size;
} name_t;
#endif
/* client prototype */
void __cdecl interp_get_name(
    name_t *name);

/* server prototype */
void __cdecl s_get_name(
    name_t *name);

#ifndef SKIP_TYPE_DECLS
typedef char **str_array_t;
typedef WCHAR **wstr_array_t;
#endif
/* client prototype */
void __cdecl interp_get_names(
    int *n,
    str_array_t *names);

/* server prototype */
void __cdecl s_get_names(
    int *n,
    str_array_t *names);

/* client prototype */
void __cdecl interp_get_namesw(
    int *n,
    wstr_array_t *names);

/* server prototype */
void __cdecl s_get_namesw(
    int *n,
    wstr_array_t *names);

/* client prototype */
int __cdecl interp_sum_pcarr2(
    int n,
    int **pa);

/* server prototype */
int __cdecl s_sum_pcarr2(
    int n,
    int **pa);

/* client prototype */
int __cdecl interp_sum_L1_norms(
    int n,
    vector_t *vs);

/* server prototype */
int __cdecl s_sum_L1_norms(
    int n,
    vector_t *vs);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_0000002A {
    int f1;
    int f2;
    int f3;
} s123_t;
#endif
/* client prototype */
s123_t * __cdecl interp_get_s123(
    void);

/* server prototype */
s123_t * __cdecl s_get_s123(
    void);

#ifndef SKIP_TYPE_DECLS
typedef struct __WIDL_server_interp_generated_name_0000002B {
    unsigned int length;
    unsigned int size;
    pints_t numbers[1];
} numbers_struct_t;
#endif
/* client prototype */
void __cdecl interp_get_numbers(
    int length,
    int size,
    pints_t pn[]);

/* server prototype */
void __cdecl s_get_numbers(
    int length,
    int size,
    pints_t pn[]);

/* client prototype */
void __cdecl interp_get_numbers_struct(
    numbers_struct_t **ns);

/* server prototype */
void __cdecl s_get_numbers_struct(
    numbers_struct_t **ns);

/* client prototype */
str_t __cdecl interp_get_filename(
    void);

/* server prototype */
str_t __cdecl s_get_filename(
    void);

#ifndef SKIP_TYPE_DECLS
enum renum {
    RE0 = 0,
    RE1 = 1,
    RE2 = 2,
    RE3 = 3
};
#define RE_MIN (RE0)

#define RE_MAX (RE3)

typedef enum renum renum_t;
typedef int rint_t;
#endif
/* client prototype */
rint_t __cdecl interp_echo_ranged_int(
    int i,
    int j,
    int k);

/* server prototype */
rint_t __cdecl s_echo_ranged_int(
    int i,
    int j,
    int k);

/* client prototype */
rint_t __cdecl interp_echo_ranged_int2(
    int i);

/* server prototype */
rint_t __cdecl s_echo_ranged_int2(
    int i);

/* client prototype */
void __cdecl interp_get_ranged_enum(
    renum_t *re);

/* server prototype */
void __cdecl s_get_ranged_enum(
    renum_t *re);

/* client prototype */
void __cdecl interp_context_handle_test(
    void);

/* server prototype */
void __cdecl s_context_handle_test(
    void);

/* client prototype */
void __cdecl interp_full_pointer_test(
    int *a,
    int *b);

/* server prototype */
void __cdecl s_full_pointer_test(
    int *a,
    int *b);

/* client prototype */
void __cdecl interp_full_pointer_null_test(
    int *a,
    int *b);

/* server prototype */
void __cdecl s_full_pointer_null_test(
    int *a,
    int *b);

/* client prototype */
void __cdecl interp_authinfo_test(
    unsigned int protseq,
    int secure);

/* server prototype */
void __cdecl s_authinfo_test(
    unsigned int protseq,
    int secure);

/* client prototype */
void __cdecl interp_stop(
    void);

/* server prototype */
void __cdecl s_stop(
    void);

/* client prototype */
void __cdecl interp_stop_autolisten(
    void);

/* server prototype */
void __cdecl s_stop_autolisten(
    void);

#ifndef SKIP_TYPE_DECLS
typedef struct ipu {
    int t;
    union __WIDL_server_interp_generated_name_0000002C {
        IStream *stream;
    } tagged_union;
} ipu_t;
#endif
/* client prototype */
void __cdecl interp_ip_test(
    ipu_t *a);

/* server prototype */
void __cdecl s_ip_test(
    ipu_t *a);

/* client prototype */
int __cdecl interp_sum_ptr_array(
    int * a[2]);

/* server prototype */
int __cdecl s_sum_ptr_array(
    int * a[2]);

/* client prototype */
int __cdecl interp_sum_array_ptr(
    int (*a)[2]);

/* server prototype */
int __cdecl s_sum_array_ptr(
    int (*a)[2]);

#ifndef SKIP_TYPE_DECLS
typedef void *ctx_handle_t;
#endif
/* client prototype */
ctx_handle_t __cdecl interp_get_handle(
    void);

/* server prototype */
ctx_handle_t __cdecl s_get_handle(
    void);

/* client prototype */
void __cdecl interp_get_handle_by_ptr(
    ctx_handle_t *r);

/* server prototype */
void __cdecl s_get_handle_by_ptr(
    ctx_handle_t *r);

/* client prototype */
void __cdecl interp_test_handle(
    ctx_handle_t ctx_handle);

/* server prototype */
void __cdecl s_test_handle(
    ctx_handle_t ctx_handle);

/* client prototype */
void __cdecl interp_test_I_RpcBindingInqLocalClientPID(
    unsigned int protseq,
    handle_t binding);

/* server prototype */
void __cdecl s_test_I_RpcBindingInqLocalClientPID(
    unsigned int protseq,
    handle_t binding);


#endif  /* __IInterpServer_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER puint_t_UserSize     (ULONG *, ULONG, puint_t *);
unsigned char * __RPC_USER puint_t_UserMarshal  (ULONG *, unsigned char *, puint_t *);
unsigned char * __RPC_USER puint_t_UserUnmarshal(ULONG *, unsigned char *, puint_t *);
void            __RPC_USER puint_t_UserFree     (ULONG *, puint_t *);
ULONG           __RPC_USER us_t_UserSize     (ULONG *, ULONG, us_t *);
unsigned char * __RPC_USER us_t_UserMarshal  (ULONG *, unsigned char *, us_t *);
unsigned char * __RPC_USER us_t_UserUnmarshal(ULONG *, unsigned char *, us_t *);
void            __RPC_USER us_t_UserFree     (ULONG *, us_t *);
ULONG           __RPC_USER bstr_t_UserSize     (ULONG *, ULONG, bstr_t *);
unsigned char * __RPC_USER bstr_t_UserMarshal  (ULONG *, unsigned char *, bstr_t *);
unsigned char * __RPC_USER bstr_t_UserUnmarshal(ULONG *, unsigned char *, bstr_t *);
void            __RPC_USER bstr_t_UserFree     (ULONG *, bstr_t *);
void __RPC_USER ctx_handle_t_rundown(ctx_handle_t);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __server_interp_h__ */
