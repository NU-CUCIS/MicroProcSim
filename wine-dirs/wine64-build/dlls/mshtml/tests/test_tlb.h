/*** Autogenerated by WIDL 8.0-rc1 from ../wine-source/dlls/mshtml/tests/test_tlb.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __test_tlb_h__
#define __test_tlb_h__

#ifndef __WIDL_INLINE
#if defined(__cplusplus) || defined(_MSC_VER)
#define __WIDL_INLINE inline
#elif defined(__GNUC__)
#define __WIDL_INLINE __inline__
#endif
#endif

/* Forward declarations */

#ifndef __IActiveXTest_FWD_DEFINED__
#define __IActiveXTest_FWD_DEFINED__
typedef interface IActiveXTest IActiveXTest;
#ifdef __cplusplus
interface IActiveXTest;
#endif /* __cplusplus */
#endif

#ifndef __DispActiveXTest_FWD_DEFINED__
#define __DispActiveXTest_FWD_DEFINED__
typedef interface DispActiveXTest DispActiveXTest;
#ifdef __cplusplus
interface DispActiveXTest;
#endif /* __cplusplus */
#endif

#ifndef __ActiveXTest_FWD_DEFINED__
#define __ActiveXTest_FWD_DEFINED__
#ifdef __cplusplus
typedef class ActiveXTest ActiveXTest;
#else
typedef struct ActiveXTest ActiveXTest;
#endif /* defined __cplusplus */
#endif /* defined __ActiveXTest_FWD_DEFINED__ */

/* Headers for imported files */

#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __MSHTMLTest_LIBRARY_DEFINED__
#define __MSHTMLTest_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_MSHTMLTest, 0xfb137422, 0xde47, 0x4630, 0x84,0x8d, 0xa2,0x0c,0xca,0xe3,0x47,0x25);

/*****************************************************************************
 * IActiveXTest interface
 */
#ifndef __IActiveXTest_INTERFACE_DEFINED__
#define __IActiveXTest_INTERFACE_DEFINED__

DEFINE_GUID(IID_IActiveXTest, 0xe0d1ce9d, 0xe916, 0x4723, 0xac,0xe5, 0x88,0x8c,0x35,0x37,0xde,0x78);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("e0d1ce9d-e916-4723-ace5-888c3537de78")
IActiveXTest : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE nothinginteresting(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IActiveXTest, 0xe0d1ce9d, 0xe916, 0x4723, 0xac,0xe5, 0x88,0x8c,0x35,0x37,0xde,0x78)
#endif
#else
typedef struct IActiveXTestVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IActiveXTest *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IActiveXTest *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IActiveXTest *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IActiveXTest *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IActiveXTest *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IActiveXTest *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IActiveXTest *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IActiveXTest methods ***/
    HRESULT (STDMETHODCALLTYPE *nothinginteresting)(
        IActiveXTest *This);

    END_INTERFACE
} IActiveXTestVtbl;

interface IActiveXTest {
    CONST_VTBL IActiveXTestVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IActiveXTest_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IActiveXTest_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IActiveXTest_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IActiveXTest_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IActiveXTest_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IActiveXTest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IActiveXTest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IActiveXTest methods ***/
#define IActiveXTest_nothinginteresting(This) (This)->lpVtbl->nothinginteresting(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT IActiveXTest_QueryInterface(IActiveXTest* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG IActiveXTest_AddRef(IActiveXTest* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG IActiveXTest_Release(IActiveXTest* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT IActiveXTest_GetTypeInfoCount(IActiveXTest* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT IActiveXTest_GetTypeInfo(IActiveXTest* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT IActiveXTest_GetIDsOfNames(IActiveXTest* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT IActiveXTest_Invoke(IActiveXTest* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IActiveXTest methods ***/
static __WIDL_INLINE HRESULT IActiveXTest_nothinginteresting(IActiveXTest* This) {
    return This->lpVtbl->nothinginteresting(This);
}
#endif
#endif

#endif


#endif  /* __IActiveXTest_INTERFACE_DEFINED__ */

/*****************************************************************************
 * DispActiveXTest dispinterface
 */
#ifndef __DispActiveXTest_DISPINTERFACE_DEFINED__
#define __DispActiveXTest_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_DispActiveXTest, 0x0d853edb, 0xcb70, 0x447e, 0x9d,0x8a, 0xb9,0x66,0x1c,0x5d,0xa5,0x6f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("0d853edb-cb70-447e-9d8a-b9661c5da56f")
DispActiveXTest : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(DispActiveXTest, 0x0d853edb, 0xcb70, 0x447e, 0x9d,0x8a, 0xb9,0x66,0x1c,0x5d,0xa5,0x6f)
#endif
#else
typedef struct DispActiveXTestVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        DispActiveXTest *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        DispActiveXTest *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        DispActiveXTest *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        DispActiveXTest *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        DispActiveXTest *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        DispActiveXTest *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        DispActiveXTest *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} DispActiveXTestVtbl;

interface DispActiveXTest {
    CONST_VTBL DispActiveXTestVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define DispActiveXTest_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define DispActiveXTest_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispActiveXTest_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define DispActiveXTest_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define DispActiveXTest_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define DispActiveXTest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define DispActiveXTest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT DispActiveXTest_QueryInterface(DispActiveXTest* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG DispActiveXTest_AddRef(DispActiveXTest* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG DispActiveXTest_Release(DispActiveXTest* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT DispActiveXTest_GetTypeInfoCount(DispActiveXTest* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT DispActiveXTest_GetTypeInfo(DispActiveXTest* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT DispActiveXTest_GetIDsOfNames(DispActiveXTest* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT DispActiveXTest_Invoke(DispActiveXTest* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __DispActiveXTest_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ActiveXTest coclass
 */

DEFINE_GUID(CLSID_ActiveXTest, 0xba9d587b, 0x1aad, 0x4192, 0xa2,0x9a, 0x99,0xbd,0x5f,0x74,0x82,0xc3);

#ifdef __cplusplus
class DECLSPEC_UUID("ba9d587b-1aad-4192-a29a-99bd5f7482c3") ActiveXTest;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ActiveXTest, 0xba9d587b, 0x1aad, 0x4192, 0xa2,0x9a, 0x99,0xbd,0x5f,0x74,0x82,0xc3)
#endif
#endif

#endif /* __MSHTMLTest_LIBRARY_DEFINED__ */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __test_tlb_h__ */
