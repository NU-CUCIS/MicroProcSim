/*** Autogenerated by WIDL 8.0-rc1 from ../wine-source/dlls/oleaut32/tests/tmarshal.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __tmarshal_h__
#define __tmarshal_h__

#ifndef __WIDL_INLINE
#if defined(__cplusplus) || defined(_MSC_VER)
#define __WIDL_INLINE inline
#elif defined(__GNUC__)
#define __WIDL_INLINE __inline__
#endif
#endif

/* Forward declarations */

#ifndef __ISomethingFromDispatch_FWD_DEFINED__
#define __ISomethingFromDispatch_FWD_DEFINED__
typedef interface ISomethingFromDispatch ISomethingFromDispatch;
#ifdef __cplusplus
interface ISomethingFromDispatch;
#endif /* __cplusplus */
#endif

#ifndef __ItestDual_FWD_DEFINED__
#define __ItestDual_FWD_DEFINED__
typedef interface ItestDual ItestDual;
#ifdef __cplusplus
interface ItestDual;
#endif /* __cplusplus */
#endif

#ifndef __ITestSecondIface_FWD_DEFINED__
#define __ITestSecondIface_FWD_DEFINED__
typedef interface ITestSecondIface ITestSecondIface;
#ifdef __cplusplus
interface ITestSecondIface;
#endif /* __cplusplus */
#endif

#ifndef __ITestSecondDisp_FWD_DEFINED__
#define __ITestSecondDisp_FWD_DEFINED__
typedef interface ITestSecondDisp ITestSecondDisp;
#ifdef __cplusplus
interface ITestSecondDisp;
#endif /* __cplusplus */
#endif

#ifndef __ICoclass1_FWD_DEFINED__
#define __ICoclass1_FWD_DEFINED__
typedef interface ICoclass1 ICoclass1;
#ifdef __cplusplus
interface ICoclass1;
#endif /* __cplusplus */
#endif

#ifndef __ICoclass2_FWD_DEFINED__
#define __ICoclass2_FWD_DEFINED__
typedef interface ICoclass2 ICoclass2;
#ifdef __cplusplus
interface ICoclass2;
#endif /* __cplusplus */
#endif

#ifndef __Coclass1_FWD_DEFINED__
#define __Coclass1_FWD_DEFINED__
#ifdef __cplusplus
typedef class Coclass1 Coclass1;
#else
typedef struct Coclass1 Coclass1;
#endif /* defined __cplusplus */
#endif /* defined __Coclass1_FWD_DEFINED__ */

#ifndef __Coclass2_FWD_DEFINED__
#define __Coclass2_FWD_DEFINED__
#ifdef __cplusplus
typedef class Coclass2 Coclass2;
#else
typedef struct Coclass2 Coclass2;
#endif /* defined __cplusplus */
#endif /* defined __Coclass2_FWD_DEFINED__ */

#ifndef __Coclass3_FWD_DEFINED__
#define __Coclass3_FWD_DEFINED__
#ifdef __cplusplus
typedef class Coclass3 Coclass3;
#else
typedef struct Coclass3 Coclass3;
#endif /* defined __cplusplus */
#endif /* defined __Coclass3_FWD_DEFINED__ */

#ifndef __IWidget_FWD_DEFINED__
#define __IWidget_FWD_DEFINED__
typedef interface IWidget IWidget;
#ifdef __cplusplus
interface IWidget;
#endif /* __cplusplus */
#endif

#ifndef __IStaticWidget_FWD_DEFINED__
#define __IStaticWidget_FWD_DEFINED__
typedef interface IStaticWidget IStaticWidget;
#ifdef __cplusplus
interface IStaticWidget;
#endif /* __cplusplus */
#endif

#ifndef __IKindaEnumWidget_FWD_DEFINED__
#define __IKindaEnumWidget_FWD_DEFINED__
typedef interface IKindaEnumWidget IKindaEnumWidget;
#ifdef __cplusplus
interface IKindaEnumWidget;
#endif /* __cplusplus */
#endif

#ifndef __INonOleAutomation_FWD_DEFINED__
#define __INonOleAutomation_FWD_DEFINED__
typedef interface INonOleAutomation INonOleAutomation;
#ifdef __cplusplus
interface INonOleAutomation;
#endif /* __cplusplus */
#endif

#ifndef __ApplicationObject2_FWD_DEFINED__
#define __ApplicationObject2_FWD_DEFINED__
#ifdef __cplusplus
typedef class ApplicationObject2 ApplicationObject2;
#else
typedef struct ApplicationObject2 ApplicationObject2;
#endif /* defined __cplusplus */
#endif /* defined __ApplicationObject2_FWD_DEFINED__ */

#ifndef __ItestIF1_FWD_DEFINED__
#define __ItestIF1_FWD_DEFINED__
typedef interface ItestIF1 ItestIF1;
#ifdef __cplusplus
interface ItestIF1;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF2_FWD_DEFINED__
#define __ItestIF2_FWD_DEFINED__
typedef interface ItestIF2 ItestIF2;
#ifdef __cplusplus
interface ItestIF2;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF3_FWD_DEFINED__
#define __ItestIF3_FWD_DEFINED__
typedef interface ItestIF3 ItestIF3;
#ifdef __cplusplus
interface ItestIF3;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF4_FWD_DEFINED__
#define __ItestIF4_FWD_DEFINED__
typedef interface ItestIF4 ItestIF4;
#ifdef __cplusplus
interface ItestIF4;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF5_FWD_DEFINED__
#define __ItestIF5_FWD_DEFINED__
typedef interface ItestIF5 ItestIF5;
#ifdef __cplusplus
interface ItestIF5;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF6_FWD_DEFINED__
#define __ItestIF6_FWD_DEFINED__
typedef interface ItestIF6 ItestIF6;
#ifdef __cplusplus
interface ItestIF6;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF7_FWD_DEFINED__
#define __ItestIF7_FWD_DEFINED__
typedef interface ItestIF7 ItestIF7;
#ifdef __cplusplus
interface ItestIF7;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF8_FWD_DEFINED__
#define __ItestIF8_FWD_DEFINED__
typedef interface ItestIF8 ItestIF8;
#ifdef __cplusplus
interface ItestIF8;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF9_FWD_DEFINED__
#define __ItestIF9_FWD_DEFINED__
typedef interface ItestIF9 ItestIF9;
#ifdef __cplusplus
interface ItestIF9;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF10_FWD_DEFINED__
#define __ItestIF10_FWD_DEFINED__
typedef interface ItestIF10 ItestIF10;
#ifdef __cplusplus
interface ItestIF10;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF11_FWD_DEFINED__
#define __ItestIF11_FWD_DEFINED__
typedef interface ItestIF11 ItestIF11;
#ifdef __cplusplus
interface ItestIF11;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF12_FWD_DEFINED__
#define __ItestIF12_FWD_DEFINED__
typedef interface ItestIF12 ItestIF12;
#ifdef __cplusplus
interface ItestIF12;
#endif /* __cplusplus */
#endif

#ifndef __ItestIF13_FWD_DEFINED__
#define __ItestIF13_FWD_DEFINED__
typedef interface ItestIF13 ItestIF13;
#ifdef __cplusplus
interface ItestIF13;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <ocidl.h>

#ifdef __cplusplus
extern "C" {
#endif

enum IWidget_dispids {
    DISPID_TM_NAME = 1,
    DISPID_TM_DOSOMETHING = 2,
    DISPID_TM_STATE = 3,
    DISPID_TM_MAP = 4,
    DISPID_TM_SETOLECOLOR = 5,
    DISPID_TM_GETOLECOLOR = 6,
    DISPID_TM_CLONE = 7,
    DISPID_TM_CLONEDISPATCH = 8,
    DISPID_TM_CLONECOCLASS = 9,
    DISPID_TM_VALUE = 10,
    DISPID_TM_VARARRAYPTR = 11,
    DISPID_TM_VARARG = 12,
    DISPID_TM_ERROR = 13,
    DISPID_TM_CLONEINTERFACE = 14,
    DISPID_TM_TESTDUAL = 15,
    DISPID_TM_PROP_WITH_LCID = 16,
    DISPID_TM_PROP_INT = 17,
    DISPID_TM_PROP_UINT = 18,
    DISPID_TM_BYREF_UINT = 19,
    DISPID_TM_PROP_OPT_ARG = 20,
    DISPID_TM_PROP_REQ_ARG = 21,
    DISPID_TM_RESTRICTED = 22,
    DISPID_TM_TESTSECONDIFACE = 23,
    DISPID_TM_VARARG_RUN = 24,
    DISPID_TM_VARARG_REF_RUN = 25,
    DISPID_TM_BASETYPES_IN = 26,
    DISPID_TM_BASETYPES_OUT = 27,
    DISPID_TM_FLOAT_ABI = 28,
    DISPID_TM_INT_PTR = 29,
    DISPID_TM_INT_PTR_PTR = 30,
    DISPID_TM_IFACE_IN = 31,
    DISPID_TM_IFACE_OUT = 32,
    DISPID_TM_IFACE_PTR = 33,
    DISPID_TM_IFACE_NOPTR = 34,
    DISPID_TM_BSTR = 35,
    DISPID_TM_VARIANT = 36,
    DISPID_TM_SAFEARRAY = 37,
    DISPID_TM_STRUCT = 38,
    DISPID_TM_STRUCT_PTR_PTR = 39,
    DISPID_TM_THIN_STRUCT = 40,
    DISPID_TM_RECT = 41,
    DISPID_TM_COMPLEX_STRUCT = 42,
    DISPID_TM_ARRAY = 43,
    DISPID_TM_VARIANT_ARRAY = 44,
    DISPID_TM_STRUCT_ARRAY = 45,
    DISPID_TM_TYPEDEF = 46,
    DISPID_TM_COCLASS = 47,
    DISPID_TM_COCLASS_PTR = 48,
    DISPID_TM_COCLASS_NOPTR = 49,
    DISPID_TM_NOINOUT = 50
};
#define DISPID_TM_NEG_RESTRICTED (-26)

enum INonOleAutomation_dispids {
    DISPID_NOA_BSTRRET = 1,
    DISPID_NOA_ERROR = 2
};
#ifndef __TestTypelib_LIBRARY_DEFINED__
#define __TestTypelib_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_TestTypelib, 0xd96d8a3e, 0x78b6, 0x4c8d, 0x8f,0x27, 0x05,0x9d,0xb9,0x59,0xbe,0x8a);

typedef enum tagSTATE {
    STATE_UNWIDGETIFIED = 1,
    STATE_WIDGETIFIED = 2
} STATE;
typedef struct tagMYSTRUCT {
    INT field1;
    ULONGLONG field2;
    UINT uarr[8];
} MYSTRUCT;
typedef int myint_t;
typedef int array_t[4];
/*****************************************************************************
 * ISomethingFromDispatch interface
 */
#ifndef __ISomethingFromDispatch_INTERFACE_DEFINED__
#define __ISomethingFromDispatch_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISomethingFromDispatch, 0x12345678, 0x1234, 0x4321, 0x12,0x34, 0x12,0x12,0x12,0x12,0x12,0x12);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("12345678-1234-4321-1234-121212121212")
ISomethingFromDispatch : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE anotherfn(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISomethingFromDispatch, 0x12345678, 0x1234, 0x4321, 0x12,0x34, 0x12,0x12,0x12,0x12,0x12,0x12)
#endif
#else
typedef struct ISomethingFromDispatchVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISomethingFromDispatch *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISomethingFromDispatch *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISomethingFromDispatch *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ISomethingFromDispatch *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ISomethingFromDispatch *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ISomethingFromDispatch *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ISomethingFromDispatch *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ISomethingFromDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *anotherfn)(
        ISomethingFromDispatch *This);

    END_INTERFACE
} ISomethingFromDispatchVtbl;

interface ISomethingFromDispatch {
    CONST_VTBL ISomethingFromDispatchVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISomethingFromDispatch_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISomethingFromDispatch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISomethingFromDispatch_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ISomethingFromDispatch_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ISomethingFromDispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ISomethingFromDispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ISomethingFromDispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ISomethingFromDispatch methods ***/
#define ISomethingFromDispatch_anotherfn(This) (This)->lpVtbl->anotherfn(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ISomethingFromDispatch_QueryInterface(ISomethingFromDispatch* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ISomethingFromDispatch_AddRef(ISomethingFromDispatch* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ISomethingFromDispatch_Release(ISomethingFromDispatch* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ISomethingFromDispatch_GetTypeInfoCount(ISomethingFromDispatch* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ISomethingFromDispatch_GetTypeInfo(ISomethingFromDispatch* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ISomethingFromDispatch_GetIDsOfNames(ISomethingFromDispatch* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ISomethingFromDispatch_Invoke(ISomethingFromDispatch* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ISomethingFromDispatch methods ***/
static __WIDL_INLINE HRESULT ISomethingFromDispatch_anotherfn(ISomethingFromDispatch* This) {
    return This->lpVtbl->anotherfn(This);
}
#endif
#endif

#endif


#endif  /* __ISomethingFromDispatch_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestDual interface
 */
#ifndef __ItestDual_INTERFACE_DEFINED__
#define __ItestDual_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestDual, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x67);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f7e06fe-0bce-46f0-8b7d-3a68393c7967")
ItestDual : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestDual, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x67)
#endif
#else
typedef struct ItestDualVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestDual *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestDual *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestDual *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestDual *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestDual *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestDual *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestDual *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ItestDual methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        ItestDual *This);

    END_INTERFACE
} ItestDualVtbl;

interface ItestDual {
    CONST_VTBL ItestDualVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestDual_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestDual_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestDual_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestDual_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestDual_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestDual_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestDual_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ItestDual methods ***/
#define ItestDual_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestDual_QueryInterface(ItestDual* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestDual_AddRef(ItestDual* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestDual_Release(ItestDual* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestDual_GetTypeInfoCount(ItestDual* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestDual_GetTypeInfo(ItestDual* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestDual_GetIDsOfNames(ItestDual* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestDual_Invoke(ItestDual* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ItestDual methods ***/
static __WIDL_INLINE HRESULT ItestDual_test(ItestDual* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __ItestDual_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ITestSecondIface interface
 */
#ifndef __ITestSecondIface_INTERFACE_DEFINED__
#define __ITestSecondIface_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITestSecondIface, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x68);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f7e06fe-0bce-46f0-8b7d-3a68393c7968")
ITestSecondIface : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITestSecondIface, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x68)
#endif
#else
typedef struct ITestSecondIfaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITestSecondIface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITestSecondIface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITestSecondIface *This);

    /*** ITestSecondIface methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        ITestSecondIface *This);

    END_INTERFACE
} ITestSecondIfaceVtbl;

interface ITestSecondIface {
    CONST_VTBL ITestSecondIfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITestSecondIface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITestSecondIface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITestSecondIface_Release(This) (This)->lpVtbl->Release(This)
/*** ITestSecondIface methods ***/
#define ITestSecondIface_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ITestSecondIface_QueryInterface(ITestSecondIface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ITestSecondIface_AddRef(ITestSecondIface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ITestSecondIface_Release(ITestSecondIface* This) {
    return This->lpVtbl->Release(This);
}
/*** ITestSecondIface methods ***/
static __WIDL_INLINE HRESULT ITestSecondIface_test(ITestSecondIface* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __ITestSecondIface_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ITestSecondDisp interface
 */
#ifndef __ITestSecondDisp_INTERFACE_DEFINED__
#define __ITestSecondDisp_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITestSecondDisp, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x69);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f7e06fe-0bce-46f0-8b7d-3a68393c7969")
ITestSecondDisp : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITestSecondDisp, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x69)
#endif
#else
typedef struct ITestSecondDispVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITestSecondDisp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITestSecondDisp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITestSecondDisp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ITestSecondDisp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ITestSecondDisp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ITestSecondDisp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ITestSecondDisp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ITestSecondDisp methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        ITestSecondDisp *This);

    END_INTERFACE
} ITestSecondDispVtbl;

interface ITestSecondDisp {
    CONST_VTBL ITestSecondDispVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITestSecondDisp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITestSecondDisp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITestSecondDisp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ITestSecondDisp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ITestSecondDisp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ITestSecondDisp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ITestSecondDisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ITestSecondDisp methods ***/
#define ITestSecondDisp_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ITestSecondDisp_QueryInterface(ITestSecondDisp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ITestSecondDisp_AddRef(ITestSecondDisp* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ITestSecondDisp_Release(ITestSecondDisp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ITestSecondDisp_GetTypeInfoCount(ITestSecondDisp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ITestSecondDisp_GetTypeInfo(ITestSecondDisp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ITestSecondDisp_GetIDsOfNames(ITestSecondDisp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ITestSecondDisp_Invoke(ITestSecondDisp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ITestSecondDisp methods ***/
static __WIDL_INLINE HRESULT ITestSecondDisp_test(ITestSecondDisp* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __ITestSecondDisp_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ICoclass1 interface
 */
#ifndef __ICoclass1_INTERFACE_DEFINED__
#define __ICoclass1_INTERFACE_DEFINED__

DEFINE_GUID(IID_ICoclass1, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f7e06fe-0bce-46f0-8b7d-3a68393c796a")
ICoclass1 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ICoclass1, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6a)
#endif
#else
typedef struct ICoclass1Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ICoclass1 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ICoclass1 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ICoclass1 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ICoclass1 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ICoclass1 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ICoclass1 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ICoclass1 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ICoclass1 methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        ICoclass1 *This);

    END_INTERFACE
} ICoclass1Vtbl;

interface ICoclass1 {
    CONST_VTBL ICoclass1Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ICoclass1_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ICoclass1_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ICoclass1_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ICoclass1_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ICoclass1_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ICoclass1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ICoclass1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ICoclass1 methods ***/
#define ICoclass1_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ICoclass1_QueryInterface(ICoclass1* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ICoclass1_AddRef(ICoclass1* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ICoclass1_Release(ICoclass1* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ICoclass1_GetTypeInfoCount(ICoclass1* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ICoclass1_GetTypeInfo(ICoclass1* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ICoclass1_GetIDsOfNames(ICoclass1* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ICoclass1_Invoke(ICoclass1* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ICoclass1 methods ***/
static __WIDL_INLINE HRESULT ICoclass1_test(ICoclass1* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __ICoclass1_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ICoclass2 interface
 */
#ifndef __ICoclass2_INTERFACE_DEFINED__
#define __ICoclass2_INTERFACE_DEFINED__

DEFINE_GUID(IID_ICoclass2, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6b);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("3f7e06fe-0bce-46f0-8b7d-3a68393c796b")
ICoclass2 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ICoclass2, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6b)
#endif
#else
typedef struct ICoclass2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ICoclass2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ICoclass2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ICoclass2 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ICoclass2 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ICoclass2 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ICoclass2 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ICoclass2 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ICoclass2 methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        ICoclass2 *This);

    END_INTERFACE
} ICoclass2Vtbl;

interface ICoclass2 {
    CONST_VTBL ICoclass2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ICoclass2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ICoclass2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ICoclass2_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ICoclass2_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ICoclass2_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ICoclass2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ICoclass2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ICoclass2 methods ***/
#define ICoclass2_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ICoclass2_QueryInterface(ICoclass2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ICoclass2_AddRef(ICoclass2* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ICoclass2_Release(ICoclass2* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ICoclass2_GetTypeInfoCount(ICoclass2* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ICoclass2_GetTypeInfo(ICoclass2* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ICoclass2_GetIDsOfNames(ICoclass2* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ICoclass2_Invoke(ICoclass2* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ICoclass2 methods ***/
static __WIDL_INLINE HRESULT ICoclass2_test(ICoclass2* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __ICoclass2_INTERFACE_DEFINED__ */

struct Coclass1 { ICoclass1 *iface; };
struct Coclass2 { ICoclass2 *iface; };
struct Coclass3 { ICoclass1 *iface; };
/*****************************************************************************
 * Coclass1 coclass
 */

DEFINE_GUID(CLSID_Coclass1, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6c);

#ifdef __cplusplus
class DECLSPEC_UUID("3f7e06fe-0bce-46f0-8b7d-3a68393c796c") Coclass1;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Coclass1, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6c)
#endif
#endif

/*****************************************************************************
 * Coclass2 coclass
 */

DEFINE_GUID(CLSID_Coclass2, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6d);

#ifdef __cplusplus
class DECLSPEC_UUID("3f7e06fe-0bce-46f0-8b7d-3a68393c796d") Coclass2;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Coclass2, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6d)
#endif
#endif

/*****************************************************************************
 * Coclass3 coclass
 */

DEFINE_GUID(CLSID_Coclass3, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6e);

#ifdef __cplusplus
class DECLSPEC_UUID("3f7e06fe-0bce-46f0-8b7d-3a68393c796e") Coclass3;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Coclass3, 0x3f7e06fe, 0x0bce, 0x46f0, 0x8b,0x7d, 0x3a,0x68,0x39,0x3c,0x79,0x6e)
#endif
#endif

/*****************************************************************************
 * IWidget interface
 */
#ifndef __IWidget_INTERFACE_DEFINED__
#define __IWidget_INTERFACE_DEFINED__

struct thin {
    short a;
    char b;
};
struct complex {
    char c;
    int i;
    int *pi;
    int **ppi;
    ISomethingFromDispatch *iface;
    ISomethingFromDispatch **iface_ptr;
    BSTR bstr;
    VARIANT var;
    MYSTRUCT mystruct;
    array_t arr;
    myint_t myint;
};
DEFINE_GUID(IID_IWidget, 0xa1f8cae3, 0xc947, 0x4c5f, 0xb5,0x7d, 0xc8,0x7b,0x9b,0x5f,0x35,0x86);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("a1f8cae3-c947-4c5f-b57d-c87b9b5f3586")
IWidget : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE put_Name(
        BSTR name) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Name(
        BSTR *name) = 0;

    virtual HRESULT STDMETHODCALLTYPE DoSomething(
        double number,
        BSTR *str1,
        BSTR str2,
        VARIANT *opt) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_State(
        STATE *state) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_State(
        STATE state) = 0;

    virtual HRESULT STDMETHODCALLTYPE Map(
        BSTR bstrId,
        BSTR *sValue) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetOleColor(
        OLE_COLOR val) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetOleColor(
        OLE_COLOR *pVal) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Clone(
        IWidget **ppVal) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_CloneDispatch(
        IDispatch **ppVal) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_CloneCoclass(
        ApplicationObject2 **ppVal) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_Value(
        VARIANT *value,
        VARIANT *retval) = 0;

    virtual HRESULT STDMETHODCALLTYPE VariantArrayPtr(
        SAFEARRAY **values) = 0;

    virtual HRESULT STDMETHODCALLTYPE VarArg(
        int numexpect,
        SAFEARRAY *values) = 0;

    virtual HRESULT STDMETHODCALLTYPE Error(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_CloneInterface(
        ISomethingFromDispatch **ppVal) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_prop_with_lcid(
        LONG lcid,
        INT i) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_prop_with_lcid(
        LONG lcid,
        INT *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_prop_int(
        INT *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_prop_uint(
        UINT *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE ByRefUInt(
        UINT *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_prop_opt_arg(
        INT opt,
        INT i) = 0;

    virtual HRESULT STDMETHODCALLTYPE put_prop_req_arg(
        INT req,
        INT i) = 0;

    virtual HRESULT STDMETHODCALLTYPE pos_restrict(
        INT *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE neg_restrict(
        INT *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE VarArg_Run(
        BSTR name,
        SAFEARRAY *params,
        VARIANT *result) = 0;

    virtual HRESULT STDMETHODCALLTYPE VarArg_Ref_Run(
        BSTR name,
        SAFEARRAY **params,
        VARIANT *result) = 0;

    virtual HRESULT STDMETHODCALLTYPE basetypes_in(
        signed char c,
        short s,
        LONG l,
        hyper h,
        unsigned char uc,
        unsigned short us,
        ULONG ul,
        MIDL_uhyper uh,
        float f,
        double d,
        STATE st) = 0;

    virtual HRESULT STDMETHODCALLTYPE basetypes_out(
        signed char *c,
        short *s,
        LONG *l,
        hyper *h,
        unsigned char *uc,
        unsigned short *us,
        ULONG *ul,
        MIDL_uhyper *uh,
        float *f,
        double *d,
        STATE *st) = 0;

    virtual HRESULT STDMETHODCALLTYPE float_abi(
        float f,
        double d,
        int i,
        float f2,
        double d2) = 0;

    virtual HRESULT STDMETHODCALLTYPE long_ptr(
        LONG *in,
        LONG *out,
        LONG *in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE long_ptr_ptr(
        LONG **in,
        LONG **out,
        LONG **in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE iface_in(
        IUnknown *unk,
        IDispatch *disp,
        ISomethingFromDispatch *sfd) = 0;

    virtual HRESULT STDMETHODCALLTYPE iface_out(
        IUnknown **unk,
        IDispatch **disp,
        ISomethingFromDispatch **sfd) = 0;

    virtual HRESULT STDMETHODCALLTYPE iface_ptr(
        ISomethingFromDispatch **in,
        ISomethingFromDispatch **out,
        ISomethingFromDispatch **in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE iface_noptr(
        IUnknown unk,
        IDispatch disp,
        ISomethingFromDispatch sfd) = 0;

    virtual HRESULT STDMETHODCALLTYPE bstr(
        BSTR in,
        BSTR *out,
        BSTR *in_ptr,
        BSTR *in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE variant(
        VARIANT in,
        VARIANT *out,
        VARIANT *in_ptr,
        VARIANT *in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE safearray(
        SAFEARRAY *in,
        SAFEARRAY **out,
        SAFEARRAY **in_ptr,
        SAFEARRAY **in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE mystruct(
        MYSTRUCT in,
        MYSTRUCT *out,
        MYSTRUCT *in_ptr,
        MYSTRUCT *in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE mystruct_ptr_ptr(
        MYSTRUCT **in) = 0;

    virtual HRESULT STDMETHODCALLTYPE thin_struct(
        struct thin in) = 0;

    virtual HRESULT STDMETHODCALLTYPE rect(
        RECT in,
        RECT *out,
        RECT *in_ptr,
        RECT *in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE complex_struct(
        struct complex in) = 0;

    virtual HRESULT STDMETHODCALLTYPE array(
        array_t in,
        array_t out,
        array_t in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE variant_array(
        VARIANT in[2],
        VARIANT out[2],
        VARIANT in_out[2]) = 0;

    virtual HRESULT STDMETHODCALLTYPE mystruct_array(
        MYSTRUCT in[2]) = 0;

    virtual HRESULT STDMETHODCALLTYPE myint(
        myint_t val,
        myint_t *ptr,
        myint_t **ptr_ptr) = 0;

    virtual HRESULT STDMETHODCALLTYPE Coclass(
        Coclass1 *class1,
        Coclass2 *class2,
        Coclass3 *class3) = 0;

    virtual HRESULT STDMETHODCALLTYPE Coclass_ptr(
        Coclass1 **in,
        Coclass1 **out,
        Coclass1 **in_out) = 0;

    virtual HRESULT STDMETHODCALLTYPE Coclass_noptr(
        Coclass1 class1,
        Coclass2 class2,
        Coclass3 class3) = 0;

    virtual HRESULT STDMETHODCALLTYPE no_in_out(
        BSTR str,
        int i) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IWidget, 0xa1f8cae3, 0xc947, 0x4c5f, 0xb5,0x7d, 0xc8,0x7b,0x9b,0x5f,0x35,0x86)
#endif
#else
typedef struct IWidgetVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IWidget *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IWidget *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IWidget *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IWidget *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IWidget *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IWidget *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IWidget *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IWidget methods ***/
    HRESULT (STDMETHODCALLTYPE *put_Name)(
        IWidget *This,
        BSTR name);

    HRESULT (STDMETHODCALLTYPE *get_Name)(
        IWidget *This,
        BSTR *name);

    HRESULT (STDMETHODCALLTYPE *DoSomething)(
        IWidget *This,
        double number,
        BSTR *str1,
        BSTR str2,
        VARIANT *opt);

    HRESULT (STDMETHODCALLTYPE *get_State)(
        IWidget *This,
        STATE *state);

    HRESULT (STDMETHODCALLTYPE *put_State)(
        IWidget *This,
        STATE state);

    HRESULT (STDMETHODCALLTYPE *Map)(
        IWidget *This,
        BSTR bstrId,
        BSTR *sValue);

    HRESULT (STDMETHODCALLTYPE *SetOleColor)(
        IWidget *This,
        OLE_COLOR val);

    HRESULT (STDMETHODCALLTYPE *GetOleColor)(
        IWidget *This,
        OLE_COLOR *pVal);

    HRESULT (STDMETHODCALLTYPE *get_Clone)(
        IWidget *This,
        IWidget **ppVal);

    HRESULT (STDMETHODCALLTYPE *get_CloneDispatch)(
        IWidget *This,
        IDispatch **ppVal);

    HRESULT (STDMETHODCALLTYPE *get_CloneCoclass)(
        IWidget *This,
        ApplicationObject2 **ppVal);

    HRESULT (STDMETHODCALLTYPE *get_Value)(
        IWidget *This,
        VARIANT *value,
        VARIANT *retval);

    HRESULT (STDMETHODCALLTYPE *VariantArrayPtr)(
        IWidget *This,
        SAFEARRAY **values);

    HRESULT (STDMETHODCALLTYPE *VarArg)(
        IWidget *This,
        int numexpect,
        SAFEARRAY *values);

    HRESULT (STDMETHODCALLTYPE *Error)(
        IWidget *This);

    HRESULT (STDMETHODCALLTYPE *get_CloneInterface)(
        IWidget *This,
        ISomethingFromDispatch **ppVal);

    HRESULT (STDMETHODCALLTYPE *put_prop_with_lcid)(
        IWidget *This,
        LONG lcid,
        INT i);

    HRESULT (STDMETHODCALLTYPE *get_prop_with_lcid)(
        IWidget *This,
        LONG lcid,
        INT *i);

    HRESULT (STDMETHODCALLTYPE *get_prop_int)(
        IWidget *This,
        INT *i);

    HRESULT (STDMETHODCALLTYPE *get_prop_uint)(
        IWidget *This,
        UINT *i);

    HRESULT (STDMETHODCALLTYPE *ByRefUInt)(
        IWidget *This,
        UINT *i);

    HRESULT (STDMETHODCALLTYPE *put_prop_opt_arg)(
        IWidget *This,
        INT opt,
        INT i);

    HRESULT (STDMETHODCALLTYPE *put_prop_req_arg)(
        IWidget *This,
        INT req,
        INT i);

    HRESULT (STDMETHODCALLTYPE *pos_restrict)(
        IWidget *This,
        INT *i);

    HRESULT (STDMETHODCALLTYPE *neg_restrict)(
        IWidget *This,
        INT *i);

    HRESULT (STDMETHODCALLTYPE *VarArg_Run)(
        IWidget *This,
        BSTR name,
        SAFEARRAY *params,
        VARIANT *result);

    HRESULT (STDMETHODCALLTYPE *VarArg_Ref_Run)(
        IWidget *This,
        BSTR name,
        SAFEARRAY **params,
        VARIANT *result);

    HRESULT (STDMETHODCALLTYPE *basetypes_in)(
        IWidget *This,
        signed char c,
        short s,
        LONG l,
        hyper h,
        unsigned char uc,
        unsigned short us,
        ULONG ul,
        MIDL_uhyper uh,
        float f,
        double d,
        STATE st);

    HRESULT (STDMETHODCALLTYPE *basetypes_out)(
        IWidget *This,
        signed char *c,
        short *s,
        LONG *l,
        hyper *h,
        unsigned char *uc,
        unsigned short *us,
        ULONG *ul,
        MIDL_uhyper *uh,
        float *f,
        double *d,
        STATE *st);

    HRESULT (STDMETHODCALLTYPE *float_abi)(
        IWidget *This,
        float f,
        double d,
        int i,
        float f2,
        double d2);

    HRESULT (STDMETHODCALLTYPE *long_ptr)(
        IWidget *This,
        LONG *in,
        LONG *out,
        LONG *in_out);

    HRESULT (STDMETHODCALLTYPE *long_ptr_ptr)(
        IWidget *This,
        LONG **in,
        LONG **out,
        LONG **in_out);

    HRESULT (STDMETHODCALLTYPE *iface_in)(
        IWidget *This,
        IUnknown *unk,
        IDispatch *disp,
        ISomethingFromDispatch *sfd);

    HRESULT (STDMETHODCALLTYPE *iface_out)(
        IWidget *This,
        IUnknown **unk,
        IDispatch **disp,
        ISomethingFromDispatch **sfd);

    HRESULT (STDMETHODCALLTYPE *iface_ptr)(
        IWidget *This,
        ISomethingFromDispatch **in,
        ISomethingFromDispatch **out,
        ISomethingFromDispatch **in_out);

    HRESULT (STDMETHODCALLTYPE *iface_noptr)(
        IWidget *This,
        IUnknown unk,
        IDispatch disp,
        ISomethingFromDispatch sfd);

    HRESULT (STDMETHODCALLTYPE *bstr)(
        IWidget *This,
        BSTR in,
        BSTR *out,
        BSTR *in_ptr,
        BSTR *in_out);

    HRESULT (STDMETHODCALLTYPE *variant)(
        IWidget *This,
        VARIANT in,
        VARIANT *out,
        VARIANT *in_ptr,
        VARIANT *in_out);

    HRESULT (STDMETHODCALLTYPE *safearray)(
        IWidget *This,
        SAFEARRAY *in,
        SAFEARRAY **out,
        SAFEARRAY **in_ptr,
        SAFEARRAY **in_out);

    HRESULT (STDMETHODCALLTYPE *mystruct)(
        IWidget *This,
        MYSTRUCT in,
        MYSTRUCT *out,
        MYSTRUCT *in_ptr,
        MYSTRUCT *in_out);

    HRESULT (STDMETHODCALLTYPE *mystruct_ptr_ptr)(
        IWidget *This,
        MYSTRUCT **in);

    HRESULT (STDMETHODCALLTYPE *thin_struct)(
        IWidget *This,
        struct thin in);

    HRESULT (STDMETHODCALLTYPE *rect)(
        IWidget *This,
        RECT in,
        RECT *out,
        RECT *in_ptr,
        RECT *in_out);

    HRESULT (STDMETHODCALLTYPE *complex_struct)(
        IWidget *This,
        struct complex in);

    HRESULT (STDMETHODCALLTYPE *array)(
        IWidget *This,
        array_t in,
        array_t out,
        array_t in_out);

    HRESULT (STDMETHODCALLTYPE *variant_array)(
        IWidget *This,
        VARIANT in[2],
        VARIANT out[2],
        VARIANT in_out[2]);

    HRESULT (STDMETHODCALLTYPE *mystruct_array)(
        IWidget *This,
        MYSTRUCT in[2]);

    HRESULT (STDMETHODCALLTYPE *myint)(
        IWidget *This,
        myint_t val,
        myint_t *ptr,
        myint_t **ptr_ptr);

    HRESULT (STDMETHODCALLTYPE *Coclass)(
        IWidget *This,
        Coclass1 *class1,
        Coclass2 *class2,
        Coclass3 *class3);

    HRESULT (STDMETHODCALLTYPE *Coclass_ptr)(
        IWidget *This,
        Coclass1 **in,
        Coclass1 **out,
        Coclass1 **in_out);

    HRESULT (STDMETHODCALLTYPE *Coclass_noptr)(
        IWidget *This,
        Coclass1 class1,
        Coclass2 class2,
        Coclass3 class3);

    HRESULT (STDMETHODCALLTYPE *no_in_out)(
        IWidget *This,
        BSTR str,
        int i);

    END_INTERFACE
} IWidgetVtbl;

interface IWidget {
    CONST_VTBL IWidgetVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IWidget_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IWidget_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWidget_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IWidget_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IWidget_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IWidget_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IWidget_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IWidget methods ***/
#define IWidget_put_Name(This,name) (This)->lpVtbl->put_Name(This,name)
#define IWidget_get_Name(This,name) (This)->lpVtbl->get_Name(This,name)
#define IWidget_DoSomething(This,number,str1,str2,opt) (This)->lpVtbl->DoSomething(This,number,str1,str2,opt)
#define IWidget_get_State(This,state) (This)->lpVtbl->get_State(This,state)
#define IWidget_put_State(This,state) (This)->lpVtbl->put_State(This,state)
#define IWidget_Map(This,bstrId,sValue) (This)->lpVtbl->Map(This,bstrId,sValue)
#define IWidget_SetOleColor(This,val) (This)->lpVtbl->SetOleColor(This,val)
#define IWidget_GetOleColor(This,pVal) (This)->lpVtbl->GetOleColor(This,pVal)
#define IWidget_get_Clone(This,ppVal) (This)->lpVtbl->get_Clone(This,ppVal)
#define IWidget_get_CloneDispatch(This,ppVal) (This)->lpVtbl->get_CloneDispatch(This,ppVal)
#define IWidget_get_CloneCoclass(This,ppVal) (This)->lpVtbl->get_CloneCoclass(This,ppVal)
#define IWidget_get_Value(This,value,retval) (This)->lpVtbl->get_Value(This,value,retval)
#define IWidget_VariantArrayPtr(This,values) (This)->lpVtbl->VariantArrayPtr(This,values)
#define IWidget_VarArg(This,numexpect,values) (This)->lpVtbl->VarArg(This,numexpect,values)
#define IWidget_Error(This) (This)->lpVtbl->Error(This)
#define IWidget_get_CloneInterface(This,ppVal) (This)->lpVtbl->get_CloneInterface(This,ppVal)
#define IWidget_put_prop_with_lcid(This,lcid,i) (This)->lpVtbl->put_prop_with_lcid(This,lcid,i)
#define IWidget_get_prop_with_lcid(This,lcid,i) (This)->lpVtbl->get_prop_with_lcid(This,lcid,i)
#define IWidget_get_prop_int(This,i) (This)->lpVtbl->get_prop_int(This,i)
#define IWidget_get_prop_uint(This,i) (This)->lpVtbl->get_prop_uint(This,i)
#define IWidget_ByRefUInt(This,i) (This)->lpVtbl->ByRefUInt(This,i)
#define IWidget_put_prop_opt_arg(This,opt,i) (This)->lpVtbl->put_prop_opt_arg(This,opt,i)
#define IWidget_put_prop_req_arg(This,req,i) (This)->lpVtbl->put_prop_req_arg(This,req,i)
#define IWidget_pos_restrict(This,i) (This)->lpVtbl->pos_restrict(This,i)
#define IWidget_neg_restrict(This,i) (This)->lpVtbl->neg_restrict(This,i)
#define IWidget_VarArg_Run(This,name,params,result) (This)->lpVtbl->VarArg_Run(This,name,params,result)
#define IWidget_VarArg_Ref_Run(This,name,params,result) (This)->lpVtbl->VarArg_Ref_Run(This,name,params,result)
#define IWidget_basetypes_in(This,c,s,l,h,uc,us,ul,uh,f,d,st) (This)->lpVtbl->basetypes_in(This,c,s,l,h,uc,us,ul,uh,f,d,st)
#define IWidget_basetypes_out(This,c,s,l,h,uc,us,ul,uh,f,d,st) (This)->lpVtbl->basetypes_out(This,c,s,l,h,uc,us,ul,uh,f,d,st)
#define IWidget_float_abi(This,f,d,i,f2,d2) (This)->lpVtbl->float_abi(This,f,d,i,f2,d2)
#define IWidget_long_ptr(This,in,out,in_out) (This)->lpVtbl->long_ptr(This,in,out,in_out)
#define IWidget_long_ptr_ptr(This,in,out,in_out) (This)->lpVtbl->long_ptr_ptr(This,in,out,in_out)
#define IWidget_iface_in(This,unk,disp,sfd) (This)->lpVtbl->iface_in(This,unk,disp,sfd)
#define IWidget_iface_out(This,unk,disp,sfd) (This)->lpVtbl->iface_out(This,unk,disp,sfd)
#define IWidget_iface_ptr(This,in,out,in_out) (This)->lpVtbl->iface_ptr(This,in,out,in_out)
#define IWidget_iface_noptr(This,unk,disp,sfd) (This)->lpVtbl->iface_noptr(This,unk,disp,sfd)
#define IWidget_bstr(This,in,out,in_ptr,in_out) (This)->lpVtbl->bstr(This,in,out,in_ptr,in_out)
#define IWidget_variant(This,in,out,in_ptr,in_out) (This)->lpVtbl->variant(This,in,out,in_ptr,in_out)
#define IWidget_safearray(This,in,out,in_ptr,in_out) (This)->lpVtbl->safearray(This,in,out,in_ptr,in_out)
#define IWidget_mystruct(This,in,out,in_ptr,in_out) (This)->lpVtbl->mystruct(This,in,out,in_ptr,in_out)
#define IWidget_mystruct_ptr_ptr(This,in) (This)->lpVtbl->mystruct_ptr_ptr(This,in)
#define IWidget_thin_struct(This,in) (This)->lpVtbl->thin_struct(This,in)
#define IWidget_rect(This,in,out,in_ptr,in_out) (This)->lpVtbl->rect(This,in,out,in_ptr,in_out)
#define IWidget_complex_struct(This,in) (This)->lpVtbl->complex_struct(This,in)
#define IWidget_array(This,in,out,in_out) (This)->lpVtbl->array(This,in,out,in_out)
#define IWidget_variant_array(This,in,out,in_out) (This)->lpVtbl->variant_array(This,in,out,in_out)
#define IWidget_mystruct_array(This,in) (This)->lpVtbl->mystruct_array(This,in)
#define IWidget_myint(This,val,ptr,ptr_ptr) (This)->lpVtbl->myint(This,val,ptr,ptr_ptr)
#define IWidget_Coclass(This,class1,class2,class3) (This)->lpVtbl->Coclass(This,class1,class2,class3)
#define IWidget_Coclass_ptr(This,in,out,in_out) (This)->lpVtbl->Coclass_ptr(This,in,out,in_out)
#define IWidget_Coclass_noptr(This,class1,class2,class3) (This)->lpVtbl->Coclass_noptr(This,class1,class2,class3)
#define IWidget_no_in_out(This,str,i) (This)->lpVtbl->no_in_out(This,str,i)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT IWidget_QueryInterface(IWidget* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG IWidget_AddRef(IWidget* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG IWidget_Release(IWidget* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT IWidget_GetTypeInfoCount(IWidget* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT IWidget_GetTypeInfo(IWidget* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT IWidget_GetIDsOfNames(IWidget* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT IWidget_Invoke(IWidget* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IWidget methods ***/
static __WIDL_INLINE HRESULT IWidget_put_Name(IWidget* This,BSTR name) {
    return This->lpVtbl->put_Name(This,name);
}
static __WIDL_INLINE HRESULT IWidget_get_Name(IWidget* This,BSTR *name) {
    return This->lpVtbl->get_Name(This,name);
}
static __WIDL_INLINE HRESULT IWidget_DoSomething(IWidget* This,double number,BSTR *str1,BSTR str2,VARIANT *opt) {
    return This->lpVtbl->DoSomething(This,number,str1,str2,opt);
}
static __WIDL_INLINE HRESULT IWidget_get_State(IWidget* This,STATE *state) {
    return This->lpVtbl->get_State(This,state);
}
static __WIDL_INLINE HRESULT IWidget_put_State(IWidget* This,STATE state) {
    return This->lpVtbl->put_State(This,state);
}
static __WIDL_INLINE HRESULT IWidget_Map(IWidget* This,BSTR bstrId,BSTR *sValue) {
    return This->lpVtbl->Map(This,bstrId,sValue);
}
static __WIDL_INLINE HRESULT IWidget_SetOleColor(IWidget* This,OLE_COLOR val) {
    return This->lpVtbl->SetOleColor(This,val);
}
static __WIDL_INLINE HRESULT IWidget_GetOleColor(IWidget* This,OLE_COLOR *pVal) {
    return This->lpVtbl->GetOleColor(This,pVal);
}
static __WIDL_INLINE HRESULT IWidget_get_Clone(IWidget* This,IWidget **ppVal) {
    return This->lpVtbl->get_Clone(This,ppVal);
}
static __WIDL_INLINE HRESULT IWidget_get_CloneDispatch(IWidget* This,IDispatch **ppVal) {
    return This->lpVtbl->get_CloneDispatch(This,ppVal);
}
static __WIDL_INLINE HRESULT IWidget_get_CloneCoclass(IWidget* This,ApplicationObject2 **ppVal) {
    return This->lpVtbl->get_CloneCoclass(This,ppVal);
}
static __WIDL_INLINE HRESULT IWidget_get_Value(IWidget* This,VARIANT *value,VARIANT *retval) {
    return This->lpVtbl->get_Value(This,value,retval);
}
static __WIDL_INLINE HRESULT IWidget_VariantArrayPtr(IWidget* This,SAFEARRAY **values) {
    return This->lpVtbl->VariantArrayPtr(This,values);
}
static __WIDL_INLINE HRESULT IWidget_VarArg(IWidget* This,int numexpect,SAFEARRAY *values) {
    return This->lpVtbl->VarArg(This,numexpect,values);
}
static __WIDL_INLINE HRESULT IWidget_Error(IWidget* This) {
    return This->lpVtbl->Error(This);
}
static __WIDL_INLINE HRESULT IWidget_get_CloneInterface(IWidget* This,ISomethingFromDispatch **ppVal) {
    return This->lpVtbl->get_CloneInterface(This,ppVal);
}
static __WIDL_INLINE HRESULT IWidget_put_prop_with_lcid(IWidget* This,LONG lcid,INT i) {
    return This->lpVtbl->put_prop_with_lcid(This,lcid,i);
}
static __WIDL_INLINE HRESULT IWidget_get_prop_with_lcid(IWidget* This,LONG lcid,INT *i) {
    return This->lpVtbl->get_prop_with_lcid(This,lcid,i);
}
static __WIDL_INLINE HRESULT IWidget_get_prop_int(IWidget* This,INT *i) {
    return This->lpVtbl->get_prop_int(This,i);
}
static __WIDL_INLINE HRESULT IWidget_get_prop_uint(IWidget* This,UINT *i) {
    return This->lpVtbl->get_prop_uint(This,i);
}
static __WIDL_INLINE HRESULT IWidget_ByRefUInt(IWidget* This,UINT *i) {
    return This->lpVtbl->ByRefUInt(This,i);
}
static __WIDL_INLINE HRESULT IWidget_put_prop_opt_arg(IWidget* This,INT opt,INT i) {
    return This->lpVtbl->put_prop_opt_arg(This,opt,i);
}
static __WIDL_INLINE HRESULT IWidget_put_prop_req_arg(IWidget* This,INT req,INT i) {
    return This->lpVtbl->put_prop_req_arg(This,req,i);
}
static __WIDL_INLINE HRESULT IWidget_pos_restrict(IWidget* This,INT *i) {
    return This->lpVtbl->pos_restrict(This,i);
}
static __WIDL_INLINE HRESULT IWidget_neg_restrict(IWidget* This,INT *i) {
    return This->lpVtbl->neg_restrict(This,i);
}
static __WIDL_INLINE HRESULT IWidget_VarArg_Run(IWidget* This,BSTR name,SAFEARRAY *params,VARIANT *result) {
    return This->lpVtbl->VarArg_Run(This,name,params,result);
}
static __WIDL_INLINE HRESULT IWidget_VarArg_Ref_Run(IWidget* This,BSTR name,SAFEARRAY **params,VARIANT *result) {
    return This->lpVtbl->VarArg_Ref_Run(This,name,params,result);
}
static __WIDL_INLINE HRESULT IWidget_basetypes_in(IWidget* This,signed char c,short s,LONG l,hyper h,unsigned char uc,unsigned short us,ULONG ul,MIDL_uhyper uh,float f,double d,STATE st) {
    return This->lpVtbl->basetypes_in(This,c,s,l,h,uc,us,ul,uh,f,d,st);
}
static __WIDL_INLINE HRESULT IWidget_basetypes_out(IWidget* This,signed char *c,short *s,LONG *l,hyper *h,unsigned char *uc,unsigned short *us,ULONG *ul,MIDL_uhyper *uh,float *f,double *d,STATE *st) {
    return This->lpVtbl->basetypes_out(This,c,s,l,h,uc,us,ul,uh,f,d,st);
}
static __WIDL_INLINE HRESULT IWidget_float_abi(IWidget* This,float f,double d,int i,float f2,double d2) {
    return This->lpVtbl->float_abi(This,f,d,i,f2,d2);
}
static __WIDL_INLINE HRESULT IWidget_long_ptr(IWidget* This,LONG *in,LONG *out,LONG *in_out) {
    return This->lpVtbl->long_ptr(This,in,out,in_out);
}
static __WIDL_INLINE HRESULT IWidget_long_ptr_ptr(IWidget* This,LONG **in,LONG **out,LONG **in_out) {
    return This->lpVtbl->long_ptr_ptr(This,in,out,in_out);
}
static __WIDL_INLINE HRESULT IWidget_iface_in(IWidget* This,IUnknown *unk,IDispatch *disp,ISomethingFromDispatch *sfd) {
    return This->lpVtbl->iface_in(This,unk,disp,sfd);
}
static __WIDL_INLINE HRESULT IWidget_iface_out(IWidget* This,IUnknown **unk,IDispatch **disp,ISomethingFromDispatch **sfd) {
    return This->lpVtbl->iface_out(This,unk,disp,sfd);
}
static __WIDL_INLINE HRESULT IWidget_iface_ptr(IWidget* This,ISomethingFromDispatch **in,ISomethingFromDispatch **out,ISomethingFromDispatch **in_out) {
    return This->lpVtbl->iface_ptr(This,in,out,in_out);
}
static __WIDL_INLINE HRESULT IWidget_iface_noptr(IWidget* This,IUnknown unk,IDispatch disp,ISomethingFromDispatch sfd) {
    return This->lpVtbl->iface_noptr(This,unk,disp,sfd);
}
static __WIDL_INLINE HRESULT IWidget_bstr(IWidget* This,BSTR in,BSTR *out,BSTR *in_ptr,BSTR *in_out) {
    return This->lpVtbl->bstr(This,in,out,in_ptr,in_out);
}
static __WIDL_INLINE HRESULT IWidget_variant(IWidget* This,VARIANT in,VARIANT *out,VARIANT *in_ptr,VARIANT *in_out) {
    return This->lpVtbl->variant(This,in,out,in_ptr,in_out);
}
static __WIDL_INLINE HRESULT IWidget_safearray(IWidget* This,SAFEARRAY *in,SAFEARRAY **out,SAFEARRAY **in_ptr,SAFEARRAY **in_out) {
    return This->lpVtbl->safearray(This,in,out,in_ptr,in_out);
}
static __WIDL_INLINE HRESULT IWidget_mystruct(IWidget* This,MYSTRUCT in,MYSTRUCT *out,MYSTRUCT *in_ptr,MYSTRUCT *in_out) {
    return This->lpVtbl->mystruct(This,in,out,in_ptr,in_out);
}
static __WIDL_INLINE HRESULT IWidget_mystruct_ptr_ptr(IWidget* This,MYSTRUCT **in) {
    return This->lpVtbl->mystruct_ptr_ptr(This,in);
}
static __WIDL_INLINE HRESULT IWidget_thin_struct(IWidget* This,struct thin in) {
    return This->lpVtbl->thin_struct(This,in);
}
static __WIDL_INLINE HRESULT IWidget_rect(IWidget* This,RECT in,RECT *out,RECT *in_ptr,RECT *in_out) {
    return This->lpVtbl->rect(This,in,out,in_ptr,in_out);
}
static __WIDL_INLINE HRESULT IWidget_complex_struct(IWidget* This,struct complex in) {
    return This->lpVtbl->complex_struct(This,in);
}
static __WIDL_INLINE HRESULT IWidget_array(IWidget* This,array_t in,array_t out,array_t in_out) {
    return This->lpVtbl->array(This,in,out,in_out);
}
static __WIDL_INLINE HRESULT IWidget_variant_array(IWidget* This,VARIANT in[2],VARIANT out[2],VARIANT in_out[2]) {
    return This->lpVtbl->variant_array(This,in,out,in_out);
}
static __WIDL_INLINE HRESULT IWidget_mystruct_array(IWidget* This,MYSTRUCT in[2]) {
    return This->lpVtbl->mystruct_array(This,in);
}
static __WIDL_INLINE HRESULT IWidget_myint(IWidget* This,myint_t val,myint_t *ptr,myint_t **ptr_ptr) {
    return This->lpVtbl->myint(This,val,ptr,ptr_ptr);
}
static __WIDL_INLINE HRESULT IWidget_Coclass(IWidget* This,Coclass1 *class1,Coclass2 *class2,Coclass3 *class3) {
    return This->lpVtbl->Coclass(This,class1,class2,class3);
}
static __WIDL_INLINE HRESULT IWidget_Coclass_ptr(IWidget* This,Coclass1 **in,Coclass1 **out,Coclass1 **in_out) {
    return This->lpVtbl->Coclass_ptr(This,in,out,in_out);
}
static __WIDL_INLINE HRESULT IWidget_Coclass_noptr(IWidget* This,Coclass1 class1,Coclass2 class2,Coclass3 class3) {
    return This->lpVtbl->Coclass_noptr(This,class1,class2,class3);
}
static __WIDL_INLINE HRESULT IWidget_no_in_out(IWidget* This,BSTR str,int i) {
    return This->lpVtbl->no_in_out(This,str,i);
}
#endif
#endif

#endif


#endif  /* __IWidget_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IStaticWidget interface
 */
#ifndef __IStaticWidget_INTERFACE_DEFINED__
#define __IStaticWidget_INTERFACE_DEFINED__

DEFINE_GUID(IID_IStaticWidget, 0xa1f8cae3, 0xc947, 0x3c5f, 0xa5,0x7c, 0xc8,0x8b,0x9b,0x6f,0x35,0x86);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("a1f8cae3-c947-3c5f-a57c-c88b9b6f3586")
IStaticWidget : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE TestDual(
        ItestDual *p) = 0;

    virtual HRESULT STDMETHODCALLTYPE TestSecondIface(
        ITestSecondIface *p) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IStaticWidget, 0xa1f8cae3, 0xc947, 0x3c5f, 0xa5,0x7c, 0xc8,0x8b,0x9b,0x6f,0x35,0x86)
#endif
#else
typedef struct IStaticWidgetVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IStaticWidget *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IStaticWidget *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IStaticWidget *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IStaticWidget *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IStaticWidget *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IStaticWidget *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IStaticWidget *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IStaticWidget methods ***/
    HRESULT (STDMETHODCALLTYPE *TestDual)(
        IStaticWidget *This,
        ItestDual *p);

    HRESULT (STDMETHODCALLTYPE *TestSecondIface)(
        IStaticWidget *This,
        ITestSecondIface *p);

    END_INTERFACE
} IStaticWidgetVtbl;

interface IStaticWidget {
    CONST_VTBL IStaticWidgetVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IStaticWidget_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IStaticWidget_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IStaticWidget_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IStaticWidget_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IStaticWidget_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IStaticWidget_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IStaticWidget_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IStaticWidget methods ***/
#define IStaticWidget_TestDual(This,p) (This)->lpVtbl->TestDual(This,p)
#define IStaticWidget_TestSecondIface(This,p) (This)->lpVtbl->TestSecondIface(This,p)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT IStaticWidget_QueryInterface(IStaticWidget* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG IStaticWidget_AddRef(IStaticWidget* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG IStaticWidget_Release(IStaticWidget* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT IStaticWidget_GetTypeInfoCount(IStaticWidget* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT IStaticWidget_GetTypeInfo(IStaticWidget* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT IStaticWidget_GetIDsOfNames(IStaticWidget* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT IStaticWidget_Invoke(IStaticWidget* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IStaticWidget methods ***/
static __WIDL_INLINE HRESULT IStaticWidget_TestDual(IStaticWidget* This,ItestDual *p) {
    return This->lpVtbl->TestDual(This,p);
}
static __WIDL_INLINE HRESULT IStaticWidget_TestSecondIface(IStaticWidget* This,ITestSecondIface *p) {
    return This->lpVtbl->TestSecondIface(This,p);
}
#endif
#endif

#endif


#endif  /* __IStaticWidget_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IKindaEnumWidget interface
 */
#ifndef __IKindaEnumWidget_INTERFACE_DEFINED__
#define __IKindaEnumWidget_INTERFACE_DEFINED__

DEFINE_GUID(IID_IKindaEnumWidget, 0xa028db05, 0x30f0, 0x4b93, 0xb1,0x7a, 0x41,0xc7,0x2f,0x83,0x1d,0x84);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("a028db05-30f0-4b93-b17a-41c72f831d84")
IKindaEnumWidget : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Next(
        IWidget **widget) = 0;

    virtual HRESULT STDMETHODCALLTYPE Count(
        ULONG *count) = 0;

    virtual HRESULT STDMETHODCALLTYPE Reset(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE Clone(
        IKindaEnumWidget **ppenum) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IKindaEnumWidget, 0xa028db05, 0x30f0, 0x4b93, 0xb1,0x7a, 0x41,0xc7,0x2f,0x83,0x1d,0x84)
#endif
#else
typedef struct IKindaEnumWidgetVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IKindaEnumWidget *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IKindaEnumWidget *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IKindaEnumWidget *This);

    /*** IKindaEnumWidget methods ***/
    HRESULT (STDMETHODCALLTYPE *Next)(
        IKindaEnumWidget *This,
        IWidget **widget);

    HRESULT (STDMETHODCALLTYPE *Count)(
        IKindaEnumWidget *This,
        ULONG *count);

    HRESULT (STDMETHODCALLTYPE *Reset)(
        IKindaEnumWidget *This);

    HRESULT (STDMETHODCALLTYPE *Clone)(
        IKindaEnumWidget *This,
        IKindaEnumWidget **ppenum);

    END_INTERFACE
} IKindaEnumWidgetVtbl;

interface IKindaEnumWidget {
    CONST_VTBL IKindaEnumWidgetVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IKindaEnumWidget_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IKindaEnumWidget_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IKindaEnumWidget_Release(This) (This)->lpVtbl->Release(This)
/*** IKindaEnumWidget methods ***/
#define IKindaEnumWidget_Next(This,widget) (This)->lpVtbl->Next(This,widget)
#define IKindaEnumWidget_Count(This,count) (This)->lpVtbl->Count(This,count)
#define IKindaEnumWidget_Reset(This) (This)->lpVtbl->Reset(This)
#define IKindaEnumWidget_Clone(This,ppenum) (This)->lpVtbl->Clone(This,ppenum)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT IKindaEnumWidget_QueryInterface(IKindaEnumWidget* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG IKindaEnumWidget_AddRef(IKindaEnumWidget* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG IKindaEnumWidget_Release(IKindaEnumWidget* This) {
    return This->lpVtbl->Release(This);
}
/*** IKindaEnumWidget methods ***/
static __WIDL_INLINE HRESULT IKindaEnumWidget_Next(IKindaEnumWidget* This,IWidget **widget) {
    return This->lpVtbl->Next(This,widget);
}
static __WIDL_INLINE HRESULT IKindaEnumWidget_Count(IKindaEnumWidget* This,ULONG *count) {
    return This->lpVtbl->Count(This,count);
}
static __WIDL_INLINE HRESULT IKindaEnumWidget_Reset(IKindaEnumWidget* This) {
    return This->lpVtbl->Reset(This);
}
static __WIDL_INLINE HRESULT IKindaEnumWidget_Clone(IKindaEnumWidget* This,IKindaEnumWidget **ppenum) {
    return This->lpVtbl->Clone(This,ppenum);
}
#endif
#endif

#endif


#endif  /* __IKindaEnumWidget_INTERFACE_DEFINED__ */

/*****************************************************************************
 * INonOleAutomation interface
 */
#ifndef __INonOleAutomation_INTERFACE_DEFINED__
#define __INonOleAutomation_INTERFACE_DEFINED__

DEFINE_GUID(IID_INonOleAutomation, 0xa028db06, 0x30f0, 0x4b93, 0xb1,0x7a, 0x41,0xc7,0x2f,0x83,0x1d,0x84);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("a028db06-30f0-4b93-b17a-41c72f831d84")
INonOleAutomation : public IUnknown
{
    virtual BSTR STDMETHODCALLTYPE BstrRet(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE Error(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(INonOleAutomation, 0xa028db06, 0x30f0, 0x4b93, 0xb1,0x7a, 0x41,0xc7,0x2f,0x83,0x1d,0x84)
#endif
#else
typedef struct INonOleAutomationVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        INonOleAutomation *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        INonOleAutomation *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        INonOleAutomation *This);

    /*** INonOleAutomation methods ***/
    BSTR (STDMETHODCALLTYPE *BstrRet)(
        INonOleAutomation *This);

    HRESULT (STDMETHODCALLTYPE *Error)(
        INonOleAutomation *This);

    END_INTERFACE
} INonOleAutomationVtbl;

interface INonOleAutomation {
    CONST_VTBL INonOleAutomationVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define INonOleAutomation_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define INonOleAutomation_AddRef(This) (This)->lpVtbl->AddRef(This)
#define INonOleAutomation_Release(This) (This)->lpVtbl->Release(This)
/*** INonOleAutomation methods ***/
#define INonOleAutomation_BstrRet(This) (This)->lpVtbl->BstrRet(This)
#define INonOleAutomation_Error(This) (This)->lpVtbl->Error(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT INonOleAutomation_QueryInterface(INonOleAutomation* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG INonOleAutomation_AddRef(INonOleAutomation* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG INonOleAutomation_Release(INonOleAutomation* This) {
    return This->lpVtbl->Release(This);
}
/*** INonOleAutomation methods ***/
static __WIDL_INLINE BSTR INonOleAutomation_BstrRet(INonOleAutomation* This) {
    return This->lpVtbl->BstrRet(This);
}
static __WIDL_INLINE HRESULT INonOleAutomation_Error(INonOleAutomation* This) {
    return This->lpVtbl->Error(This);
}
#endif
#endif

#endif


#endif  /* __INonOleAutomation_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ApplicationObject2 coclass
 */

DEFINE_GUID(CLSID_ApplicationObject2, 0xbb171948, 0x10ec, 0x407a, 0x9a,0x57, 0x2f,0x85,0xf7,0x97,0xff,0x1a);

#ifdef __cplusplus
class DECLSPEC_UUID("bb171948-10ec-407a-9a57-2f85f797ff1a") ApplicationObject2;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ApplicationObject2, 0xbb171948, 0x10ec, 0x407a, 0x9a,0x57, 0x2f,0x85,0xf7,0x97,0xff,0x1a)
#endif
#endif

/*****************************************************************************
 * ItestIF1 interface
 */
#ifndef __ItestIF1_INTERFACE_DEFINED__
#define __ItestIF1_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF1, 0x375f8a9d, 0x33d0, 0x44f3, 0xb9,0x72, 0x61,0xf8,0x40,0x78,0x99,0xe0);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("375f8a9d-33d0-44f3-b972-61f8407899e0")
ItestIF1 : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE fn1(
        int x) = 0;

    virtual HRESULT STDMETHODCALLTYPE fn2(
        int *x) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF1, 0x375f8a9d, 0x33d0, 0x44f3, 0xb9,0x72, 0x61,0xf8,0x40,0x78,0x99,0xe0)
#endif
#else
typedef struct ItestIF1Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF1 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF1 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF1 *This);

    /*** ItestIF1 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn1)(
        ItestIF1 *This,
        int x);

    HRESULT (STDMETHODCALLTYPE *fn2)(
        ItestIF1 *This,
        int *x);

    END_INTERFACE
} ItestIF1Vtbl;

interface ItestIF1 {
    CONST_VTBL ItestIF1Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF1_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF1_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF1_Release(This) (This)->lpVtbl->Release(This)
/*** ItestIF1 methods ***/
#define ItestIF1_fn1(This,x) (This)->lpVtbl->fn1(This,x)
#define ItestIF1_fn2(This,x) (This)->lpVtbl->fn2(This,x)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF1_QueryInterface(ItestIF1* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF1_AddRef(ItestIF1* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF1_Release(ItestIF1* This) {
    return This->lpVtbl->Release(This);
}
/*** ItestIF1 methods ***/
static __WIDL_INLINE HRESULT ItestIF1_fn1(ItestIF1* This,int x) {
    return This->lpVtbl->fn1(This,x);
}
static __WIDL_INLINE HRESULT ItestIF1_fn2(ItestIF1* This,int *x) {
    return This->lpVtbl->fn2(This,x);
}
#endif
#endif

#endif


#endif  /* __ItestIF1_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF2 interface
 */
#ifndef __ItestIF2_INTERFACE_DEFINED__
#define __ItestIF2_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF2, 0x094056a3, 0x666f, 0x4956, 0xbe,0x12, 0x18,0x59,0x66,0x83,0x10,0xb8);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("094056a3-666f-4956-be12-1859668310b8")
ItestIF2 : public ItestIF1
{
    virtual HRESULT STDMETHODCALLTYPE fn3(
        int y) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF2, 0x094056a3, 0x666f, 0x4956, 0xbe,0x12, 0x18,0x59,0x66,0x83,0x10,0xb8)
#endif
#else
typedef struct ItestIF2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF2 *This);

    /*** ItestIF1 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn1)(
        ItestIF2 *This,
        int x);

    HRESULT (STDMETHODCALLTYPE *fn2)(
        ItestIF2 *This,
        int *x);

    /*** ItestIF2 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn3)(
        ItestIF2 *This,
        int y);

    END_INTERFACE
} ItestIF2Vtbl;

interface ItestIF2 {
    CONST_VTBL ItestIF2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF2_Release(This) (This)->lpVtbl->Release(This)
/*** ItestIF1 methods ***/
#define ItestIF2_fn1(This,x) (This)->lpVtbl->fn1(This,x)
#define ItestIF2_fn2(This,x) (This)->lpVtbl->fn2(This,x)
/*** ItestIF2 methods ***/
#define ItestIF2_fn3(This,y) (This)->lpVtbl->fn3(This,y)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF2_QueryInterface(ItestIF2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF2_AddRef(ItestIF2* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF2_Release(ItestIF2* This) {
    return This->lpVtbl->Release(This);
}
/*** ItestIF1 methods ***/
static __WIDL_INLINE HRESULT ItestIF2_fn1(ItestIF2* This,int x) {
    return This->lpVtbl->fn1(This,x);
}
static __WIDL_INLINE HRESULT ItestIF2_fn2(ItestIF2* This,int *x) {
    return This->lpVtbl->fn2(This,x);
}
/*** ItestIF2 methods ***/
static __WIDL_INLINE HRESULT ItestIF2_fn3(ItestIF2* This,int y) {
    return This->lpVtbl->fn3(This,y);
}
#endif
#endif

#endif


#endif  /* __ItestIF2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF3 dispinterface
 */
#ifndef __ItestIF3_DISPINTERFACE_DEFINED__
#define __ItestIF3_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_ItestIF3, 0x33baba09, 0x2e68, 0x43ab, 0x81,0xfe, 0xd8,0x4b,0x40,0x3d,0xf2,0xe5);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("33baba09-2e68-43ab-81fe-d84b403df2e5")
ItestIF3 : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF3, 0x33baba09, 0x2e68, 0x43ab, 0x81,0xfe, 0xd8,0x4b,0x40,0x3d,0xf2,0xe5)
#endif
#else
typedef struct ItestIF3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF3 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF3 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF3 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF3 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF3 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ItestIF3Vtbl;

interface ItestIF3 {
    CONST_VTBL ItestIF3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF3_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF3_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF3_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF3_QueryInterface(ItestIF3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF3_AddRef(ItestIF3* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF3_Release(ItestIF3* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF3_GetTypeInfoCount(ItestIF3* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF3_GetTypeInfo(ItestIF3* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF3_GetIDsOfNames(ItestIF3* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF3_Invoke(ItestIF3* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __ItestIF3_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF4 dispinterface
 */
#ifndef __ItestIF4_DISPINTERFACE_DEFINED__
#define __ItestIF4_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_ItestIF4, 0xa01005c7, 0x7491, 0x42eb, 0x94,0xf3, 0x66,0x8e,0x37,0xce,0x60,0xa6);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("a01005c7-7491-42eb-94f3-668e37ce60a6")
ItestIF4 : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF4, 0xa01005c7, 0x7491, 0x42eb, 0x94,0xf3, 0x66,0x8e,0x37,0xce,0x60,0xa6)
#endif
#else
typedef struct ItestIF4Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF4 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF4 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF4 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF4 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF4 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF4 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF4 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ItestIF4Vtbl;

interface ItestIF4 {
    CONST_VTBL ItestIF4Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF4_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF4_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF4_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF4_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF4_QueryInterface(ItestIF4* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF4_AddRef(ItestIF4* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF4_Release(ItestIF4* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF4_GetTypeInfoCount(ItestIF4* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF4_GetTypeInfo(ItestIF4* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF4_GetIDsOfNames(ItestIF4* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF4_Invoke(ItestIF4* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __ItestIF4_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF5 interface
 */
#ifndef __ItestIF5_INTERFACE_DEFINED__
#define __ItestIF5_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF5, 0x4ab61e25, 0xc09f, 0x4239, 0x8f,0x7f, 0x7a,0x01,0x8e,0xa0,0x19,0x9f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("4ab61e25-c09f-4239-8f7f-7a018ea0199f")
ItestIF5 : public ItestIF2
{
    virtual HRESULT STDMETHODCALLTYPE fn4(
        int a) = 0;

    virtual HRESULT STDMETHODCALLTYPE fn5(
        int a) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF5, 0x4ab61e25, 0xc09f, 0x4239, 0x8f,0x7f, 0x7a,0x01,0x8e,0xa0,0x19,0x9f)
#endif
#else
typedef struct ItestIF5Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF5 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF5 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF5 *This);

    /*** ItestIF1 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn1)(
        ItestIF5 *This,
        int x);

    HRESULT (STDMETHODCALLTYPE *fn2)(
        ItestIF5 *This,
        int *x);

    /*** ItestIF2 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn3)(
        ItestIF5 *This,
        int y);

    /*** ItestIF5 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn4)(
        ItestIF5 *This,
        int a);

    HRESULT (STDMETHODCALLTYPE *fn5)(
        ItestIF5 *This,
        int a);

    END_INTERFACE
} ItestIF5Vtbl;

interface ItestIF5 {
    CONST_VTBL ItestIF5Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF5_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF5_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF5_Release(This) (This)->lpVtbl->Release(This)
/*** ItestIF1 methods ***/
#define ItestIF5_fn1(This,x) (This)->lpVtbl->fn1(This,x)
#define ItestIF5_fn2(This,x) (This)->lpVtbl->fn2(This,x)
/*** ItestIF2 methods ***/
#define ItestIF5_fn3(This,y) (This)->lpVtbl->fn3(This,y)
/*** ItestIF5 methods ***/
#define ItestIF5_fn4(This,a) (This)->lpVtbl->fn4(This,a)
#define ItestIF5_fn5(This,a) (This)->lpVtbl->fn5(This,a)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF5_QueryInterface(ItestIF5* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF5_AddRef(ItestIF5* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF5_Release(ItestIF5* This) {
    return This->lpVtbl->Release(This);
}
/*** ItestIF1 methods ***/
static __WIDL_INLINE HRESULT ItestIF5_fn1(ItestIF5* This,int x) {
    return This->lpVtbl->fn1(This,x);
}
static __WIDL_INLINE HRESULT ItestIF5_fn2(ItestIF5* This,int *x) {
    return This->lpVtbl->fn2(This,x);
}
/*** ItestIF2 methods ***/
static __WIDL_INLINE HRESULT ItestIF5_fn3(ItestIF5* This,int y) {
    return This->lpVtbl->fn3(This,y);
}
/*** ItestIF5 methods ***/
static __WIDL_INLINE HRESULT ItestIF5_fn4(ItestIF5* This,int a) {
    return This->lpVtbl->fn4(This,a);
}
static __WIDL_INLINE HRESULT ItestIF5_fn5(ItestIF5* This,int a) {
    return This->lpVtbl->fn5(This,a);
}
#endif
#endif

#endif


#endif  /* __ItestIF5_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF6 interface
 */
#ifndef __ItestIF6_INTERFACE_DEFINED__
#define __ItestIF6_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF6, 0xec236d8e, 0x2cc7, 0x44f2, 0xb3,0x94, 0x36,0xc8,0x6f,0xf3,0xda,0x74);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("ec236d8e-2cc7-44f2-b394-36c86ff3da74")
ItestIF6 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE fn4(
        int a) = 0;

    virtual HRESULT STDMETHODCALLTYPE fn5(
        int a) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF6, 0xec236d8e, 0x2cc7, 0x44f2, 0xb3,0x94, 0x36,0xc8,0x6f,0xf3,0xda,0x74)
#endif
#else
typedef struct ItestIF6Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF6 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF6 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF6 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF6 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF6 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF6 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF6 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ItestIF6 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn4)(
        ItestIF6 *This,
        int a);

    HRESULT (STDMETHODCALLTYPE *fn5)(
        ItestIF6 *This,
        int a);

    END_INTERFACE
} ItestIF6Vtbl;

interface ItestIF6 {
    CONST_VTBL ItestIF6Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF6_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF6_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF6_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF6_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF6_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ItestIF6 methods ***/
#define ItestIF6_fn4(This,a) (This)->lpVtbl->fn4(This,a)
#define ItestIF6_fn5(This,a) (This)->lpVtbl->fn5(This,a)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF6_QueryInterface(ItestIF6* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF6_AddRef(ItestIF6* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF6_Release(ItestIF6* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF6_GetTypeInfoCount(ItestIF6* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF6_GetTypeInfo(ItestIF6* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF6_GetIDsOfNames(ItestIF6* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF6_Invoke(ItestIF6* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ItestIF6 methods ***/
static __WIDL_INLINE HRESULT ItestIF6_fn4(ItestIF6* This,int a) {
    return This->lpVtbl->fn4(This,a);
}
static __WIDL_INLINE HRESULT ItestIF6_fn5(ItestIF6* This,int a) {
    return This->lpVtbl->fn5(This,a);
}
#endif
#endif

#endif


#endif  /* __ItestIF6_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF7 interface
 */
#ifndef __ItestIF7_INTERFACE_DEFINED__
#define __ItestIF7_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF7, 0xf711b105, 0x554d, 0x4751, 0x81,0x8c, 0x46,0xfc,0xc5,0xd7,0xc0,0xd5);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f711b105-554d-4751-818c-46fcc5d7c0d5")
ItestIF7 : public ItestIF6
{
    virtual HRESULT STDMETHODCALLTYPE fn6(
        GUID a) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF7, 0xf711b105, 0x554d, 0x4751, 0x81,0x8c, 0x46,0xfc,0xc5,0xd7,0xc0,0xd5)
#endif
#else
typedef struct ItestIF7Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF7 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF7 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF7 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF7 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF7 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF7 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF7 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ItestIF6 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn4)(
        ItestIF7 *This,
        int a);

    HRESULT (STDMETHODCALLTYPE *fn5)(
        ItestIF7 *This,
        int a);

    /*** ItestIF7 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn6)(
        ItestIF7 *This,
        GUID a);

    END_INTERFACE
} ItestIF7Vtbl;

interface ItestIF7 {
    CONST_VTBL ItestIF7Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF7_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF7_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF7_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF7_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF7_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ItestIF6 methods ***/
#define ItestIF7_fn4(This,a) (This)->lpVtbl->fn4(This,a)
#define ItestIF7_fn5(This,a) (This)->lpVtbl->fn5(This,a)
/*** ItestIF7 methods ***/
#define ItestIF7_fn6(This,a) (This)->lpVtbl->fn6(This,a)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF7_QueryInterface(ItestIF7* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF7_AddRef(ItestIF7* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF7_Release(ItestIF7* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF7_GetTypeInfoCount(ItestIF7* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF7_GetTypeInfo(ItestIF7* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF7_GetIDsOfNames(ItestIF7* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF7_Invoke(ItestIF7* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ItestIF6 methods ***/
static __WIDL_INLINE HRESULT ItestIF7_fn4(ItestIF7* This,int a) {
    return This->lpVtbl->fn4(This,a);
}
static __WIDL_INLINE HRESULT ItestIF7_fn5(ItestIF7* This,int a) {
    return This->lpVtbl->fn5(This,a);
}
/*** ItestIF7 methods ***/
static __WIDL_INLINE HRESULT ItestIF7_fn6(ItestIF7* This,GUID a) {
    return This->lpVtbl->fn6(This,a);
}
#endif
#endif

#endif


#endif  /* __ItestIF7_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF8 interface
 */
#ifndef __ItestIF8_INTERFACE_DEFINED__
#define __ItestIF8_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF8, 0xbdfa260b, 0xef40, 0x43d3, 0xb0,0x71, 0xcd,0xde,0xc9,0x19,0xf1,0x32);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("bdfa260b-ef40-43d3-b071-cddec919f132")
ItestIF8
{

    BEGIN_INTERFACE

    virtual HRESULT STDMETHODCALLTYPE fn1(
        int x) = 0;

    virtual HRESULT STDMETHODCALLTYPE fn2(
        int *x) = 0;

    END_INTERFACE

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF8, 0xbdfa260b, 0xef40, 0x43d3, 0xb0,0x71, 0xcd,0xde,0xc9,0x19,0xf1,0x32)
#endif
#else
typedef struct ItestIF8Vtbl {
    BEGIN_INTERFACE

    /*** ItestIF8 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn1)(
        ItestIF8 *This,
        int x);

    HRESULT (STDMETHODCALLTYPE *fn2)(
        ItestIF8 *This,
        int *x);

    END_INTERFACE
} ItestIF8Vtbl;

interface ItestIF8 {
    CONST_VTBL ItestIF8Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** ItestIF8 methods ***/
#define ItestIF8_fn1(This,x) (This)->lpVtbl->fn1(This,x)
#define ItestIF8_fn2(This,x) (This)->lpVtbl->fn2(This,x)
#else
/*** ItestIF8 methods ***/
static __WIDL_INLINE HRESULT ItestIF8_fn1(ItestIF8* This,int x) {
    return This->lpVtbl->fn1(This,x);
}
static __WIDL_INLINE HRESULT ItestIF8_fn2(ItestIF8* This,int *x) {
    return This->lpVtbl->fn2(This,x);
}
#endif
#endif

#endif


#endif  /* __ItestIF8_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF9 interface
 */
#ifndef __ItestIF9_INTERFACE_DEFINED__
#define __ItestIF9_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF9, 0x51033a23, 0xdc37, 0x4f19, 0xaa,0x34, 0x4d,0x8a,0x67,0x04,0x58,0xa0);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("51033a23-dc37-4f19-aa34-4d8a670458a0")
ItestIF9 : public ItestIF8
{
    virtual HRESULT STDMETHODCALLTYPE fn3(
        int y) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF9, 0x51033a23, 0xdc37, 0x4f19, 0xaa,0x34, 0x4d,0x8a,0x67,0x04,0x58,0xa0)
#endif
#else
typedef struct ItestIF9Vtbl {
    BEGIN_INTERFACE

    /*** ItestIF8 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn1)(
        ItestIF9 *This,
        int x);

    HRESULT (STDMETHODCALLTYPE *fn2)(
        ItestIF9 *This,
        int *x);

    /*** ItestIF9 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn3)(
        ItestIF9 *This,
        int y);

    END_INTERFACE
} ItestIF9Vtbl;

interface ItestIF9 {
    CONST_VTBL ItestIF9Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** ItestIF8 methods ***/
#define ItestIF9_fn1(This,x) (This)->lpVtbl->fn1(This,x)
#define ItestIF9_fn2(This,x) (This)->lpVtbl->fn2(This,x)
/*** ItestIF9 methods ***/
#define ItestIF9_fn3(This,y) (This)->lpVtbl->fn3(This,y)
#else
/*** ItestIF8 methods ***/
static __WIDL_INLINE HRESULT ItestIF9_fn1(ItestIF9* This,int x) {
    return This->lpVtbl->fn1(This,x);
}
static __WIDL_INLINE HRESULT ItestIF9_fn2(ItestIF9* This,int *x) {
    return This->lpVtbl->fn2(This,x);
}
/*** ItestIF9 methods ***/
static __WIDL_INLINE HRESULT ItestIF9_fn3(ItestIF9* This,int y) {
    return This->lpVtbl->fn3(This,y);
}
#endif
#endif

#endif


#endif  /* __ItestIF9_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF10 dispinterface
 */
#ifndef __ItestIF10_DISPINTERFACE_DEFINED__
#define __ItestIF10_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_ItestIF10, 0x2e8f14fe, 0x0bce, 0x42f0, 0x8b,0x7d, 0x3a,0xf8,0x39,0x3c,0x79,0x67);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("2e8f14fe-0bce-42f0-8b7d-3af8393c7967")
ItestIF10 : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF10, 0x2e8f14fe, 0x0bce, 0x42f0, 0x8b,0x7d, 0x3a,0xf8,0x39,0x3c,0x79,0x67)
#endif
#else
typedef struct ItestIF10Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF10 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF10 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF10 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF10 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF10 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF10 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF10 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ItestIF10Vtbl;

interface ItestIF10 {
    CONST_VTBL ItestIF10Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF10_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF10_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF10_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF10_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF10_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF10_QueryInterface(ItestIF10* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF10_AddRef(ItestIF10* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF10_Release(ItestIF10* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF10_GetTypeInfoCount(ItestIF10* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF10_GetTypeInfo(ItestIF10* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF10_GetIDsOfNames(ItestIF10* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF10_Invoke(ItestIF10* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __ItestIF10_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF11 dispinterface
 */
#ifndef __ItestIF11_DISPINTERFACE_DEFINED__
#define __ItestIF11_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_ItestIF11, 0x7d9e9371, 0x482e, 0x4944, 0x9b,0x19, 0x51,0x1f,0xc7,0x05,0x23,0x6f);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("7d9e9371-482e-4944-9b19-511fc705236f")
ItestIF11 : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF11, 0x7d9e9371, 0x482e, 0x4944, 0x9b,0x19, 0x51,0x1f,0xc7,0x05,0x23,0x6f)
#endif
#else
typedef struct ItestIF11Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF11 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF11 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF11 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF11 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF11 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF11 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF11 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ItestIF11Vtbl;

interface ItestIF11 {
    CONST_VTBL ItestIF11Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF11_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF11_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF11_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF11_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF11_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF11_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF11_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF11_QueryInterface(ItestIF11* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF11_AddRef(ItestIF11* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF11_Release(ItestIF11* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF11_GetTypeInfoCount(ItestIF11* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF11_GetTypeInfo(ItestIF11* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF11_GetIDsOfNames(ItestIF11* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF11_Invoke(ItestIF11* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __ItestIF11_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF12 interface
 */
#ifndef __ItestIF12_INTERFACE_DEFINED__
#define __ItestIF12_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF12, 0xec236d8e, 0x2cc7, 0x44f2, 0xb3,0x94, 0x46,0xc8,0x6f,0xf3,0xda,0x74);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("ec236d8e-2cc7-44f2-b394-46c86ff3da74")
ItestIF12 : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE fn4(
        int a) = 0;

    virtual HRESULT STDMETHODCALLTYPE fn5(
        int a) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF12, 0xec236d8e, 0x2cc7, 0x44f2, 0xb3,0x94, 0x46,0xc8,0x6f,0xf3,0xda,0x74)
#endif
#else
typedef struct ItestIF12Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF12 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF12 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF12 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF12 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF12 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF12 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF12 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ItestIF12 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn4)(
        ItestIF12 *This,
        int a);

    HRESULT (STDMETHODCALLTYPE *fn5)(
        ItestIF12 *This,
        int a);

    END_INTERFACE
} ItestIF12Vtbl;

interface ItestIF12 {
    CONST_VTBL ItestIF12Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF12_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF12_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF12_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF12_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF12_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ItestIF12 methods ***/
#define ItestIF12_fn4(This,a) (This)->lpVtbl->fn4(This,a)
#define ItestIF12_fn5(This,a) (This)->lpVtbl->fn5(This,a)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF12_QueryInterface(ItestIF12* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF12_AddRef(ItestIF12* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF12_Release(ItestIF12* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF12_GetTypeInfoCount(ItestIF12* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF12_GetTypeInfo(ItestIF12* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF12_GetIDsOfNames(ItestIF12* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF12_Invoke(ItestIF12* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ItestIF12 methods ***/
static __WIDL_INLINE HRESULT ItestIF12_fn4(ItestIF12* This,int a) {
    return This->lpVtbl->fn4(This,a);
}
static __WIDL_INLINE HRESULT ItestIF12_fn5(ItestIF12* This,int a) {
    return This->lpVtbl->fn5(This,a);
}
#endif
#endif

#endif


#endif  /* __ItestIF12_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ItestIF13 interface
 */
#ifndef __ItestIF13_INTERFACE_DEFINED__
#define __ItestIF13_INTERFACE_DEFINED__

DEFINE_GUID(IID_ItestIF13, 0xf711b105, 0x554d, 0x4751, 0x81,0x8c, 0x56,0xfc,0xc5,0xd7,0xc0,0xd5);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f711b105-554d-4751-818c-56fcc5d7c0d5")
ItestIF13 : public ItestIF12
{
    virtual HRESULT STDMETHODCALLTYPE fn6(
        GUID a) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ItestIF13, 0xf711b105, 0x554d, 0x4751, 0x81,0x8c, 0x56,0xfc,0xc5,0xd7,0xc0,0xd5)
#endif
#else
typedef struct ItestIF13Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ItestIF13 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ItestIF13 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ItestIF13 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ItestIF13 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ItestIF13 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ItestIF13 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ItestIF13 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ItestIF12 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn4)(
        ItestIF13 *This,
        int a);

    HRESULT (STDMETHODCALLTYPE *fn5)(
        ItestIF13 *This,
        int a);

    /*** ItestIF13 methods ***/
    HRESULT (STDMETHODCALLTYPE *fn6)(
        ItestIF13 *This,
        GUID a);

    END_INTERFACE
} ItestIF13Vtbl;

interface ItestIF13 {
    CONST_VTBL ItestIF13Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ItestIF13_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ItestIF13_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ItestIF13_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ItestIF13_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ItestIF13_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ItestIF13_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ItestIF13_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ItestIF12 methods ***/
#define ItestIF13_fn4(This,a) (This)->lpVtbl->fn4(This,a)
#define ItestIF13_fn5(This,a) (This)->lpVtbl->fn5(This,a)
/*** ItestIF13 methods ***/
#define ItestIF13_fn6(This,a) (This)->lpVtbl->fn6(This,a)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ItestIF13_QueryInterface(ItestIF13* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ItestIF13_AddRef(ItestIF13* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ItestIF13_Release(ItestIF13* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ItestIF13_GetTypeInfoCount(ItestIF13* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ItestIF13_GetTypeInfo(ItestIF13* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ItestIF13_GetIDsOfNames(ItestIF13* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ItestIF13_Invoke(ItestIF13* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ItestIF12 methods ***/
static __WIDL_INLINE HRESULT ItestIF13_fn4(ItestIF13* This,int a) {
    return This->lpVtbl->fn4(This,a);
}
static __WIDL_INLINE HRESULT ItestIF13_fn5(ItestIF13* This,int a) {
    return This->lpVtbl->fn5(This,a);
}
/*** ItestIF13 methods ***/
static __WIDL_INLINE HRESULT ItestIF13_fn6(ItestIF13* This,GUID a) {
    return This->lpVtbl->fn6(This,a);
}
#endif
#endif

#endif


#endif  /* __ItestIF13_INTERFACE_DEFINED__ */

#endif /* __TestTypelib_LIBRARY_DEFINED__ */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);
ULONG           __RPC_USER VARIANT_UserSize     (ULONG *, ULONG, VARIANT *);
unsigned char * __RPC_USER VARIANT_UserMarshal  (ULONG *, unsigned char *, VARIANT *);
unsigned char * __RPC_USER VARIANT_UserUnmarshal(ULONG *, unsigned char *, VARIANT *);
void            __RPC_USER VARIANT_UserFree     (ULONG *, VARIANT *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __tmarshal_h__ */
