/*** Autogenerated by WIDL 8.0-rc1 from ../wine-source/dlls/oleaut32/tests/test_reg.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __test_reg_h__
#define __test_reg_h__

#ifndef __WIDL_INLINE
#if defined(__cplusplus) || defined(_MSC_VER)
#define __WIDL_INLINE inline
#elif defined(__GNUC__)
#define __WIDL_INLINE __inline__
#endif
#endif

/* Forward declarations */

#ifndef __Inon_ole_FWD_DEFINED__
#define __Inon_ole_FWD_DEFINED__
typedef interface Inon_ole Inon_ole;
#ifdef __cplusplus
interface Inon_ole;
#endif /* __cplusplus */
#endif

#ifndef __Inon_ole_from_disp_FWD_DEFINED__
#define __Inon_ole_from_disp_FWD_DEFINED__
typedef interface Inon_ole_from_disp Inon_ole_from_disp;
#ifdef __cplusplus
interface Inon_ole_from_disp;
#endif /* __cplusplus */
#endif

#ifndef __Iole_FWD_DEFINED__
#define __Iole_FWD_DEFINED__
typedef interface Iole Iole;
#ifdef __cplusplus
interface Iole;
#endif /* __cplusplus */
#endif

#ifndef __Iole_from_disp_FWD_DEFINED__
#define __Iole_from_disp_FWD_DEFINED__
typedef interface Iole_from_disp Iole_from_disp;
#ifdef __cplusplus
interface Iole_from_disp;
#endif /* __cplusplus */
#endif

#ifndef __Inon_ole_dual_FWD_DEFINED__
#define __Inon_ole_dual_FWD_DEFINED__
typedef interface Inon_ole_dual Inon_ole_dual;
#ifdef __cplusplus
interface Inon_ole_dual;
#endif /* __cplusplus */
#endif

#ifndef __Iole_dual_FWD_DEFINED__
#define __Iole_dual_FWD_DEFINED__
typedef interface Iole_dual Iole_dual;
#ifdef __cplusplus
interface Iole_dual;
#endif /* __cplusplus */
#endif

#ifndef __Inon_ole_dual_from_disp_FWD_DEFINED__
#define __Inon_ole_dual_from_disp_FWD_DEFINED__
typedef interface Inon_ole_dual_from_disp Inon_ole_dual_from_disp;
#ifdef __cplusplus
interface Inon_ole_dual_from_disp;
#endif /* __cplusplus */
#endif

#ifndef __Iole_dual_from_disp_FWD_DEFINED__
#define __Iole_dual_from_disp_FWD_DEFINED__
typedef interface Iole_dual_from_disp Iole_dual_from_disp;
#ifdef __cplusplus
interface Iole_dual_from_disp;
#endif /* __cplusplus */
#endif

#ifndef __Idisp_FWD_DEFINED__
#define __Idisp_FWD_DEFINED__
typedef interface Idisp Idisp;
#ifdef __cplusplus
interface Idisp;
#endif /* __cplusplus */
#endif

#ifndef __Idisp_from_non_ole_iface_FWD_DEFINED__
#define __Idisp_from_non_ole_iface_FWD_DEFINED__
typedef interface Idisp_from_non_ole_iface Idisp_from_non_ole_iface;
#ifdef __cplusplus
interface Idisp_from_non_ole_iface;
#endif /* __cplusplus */
#endif

#ifndef __Idisp_from_ole_from_disp_iface_FWD_DEFINED__
#define __Idisp_from_ole_from_disp_iface_FWD_DEFINED__
typedef interface Idisp_from_ole_from_disp_iface Idisp_from_ole_from_disp_iface;
#ifdef __cplusplus
interface Idisp_from_ole_from_disp_iface;
#endif /* __cplusplus */
#endif

#ifndef __ICollection_FWD_DEFINED__
#define __ICollection_FWD_DEFINED__
typedef interface ICollection ICollection;
#ifdef __cplusplus
interface ICollection;
#endif /* __cplusplus */
#endif

#ifndef __IInvokeTest_FWD_DEFINED__
#define __IInvokeTest_FWD_DEFINED__
typedef interface IInvokeTest IInvokeTest;
#ifdef __cplusplus
interface IInvokeTest;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __register_test_LIBRARY_DEFINED__
#define __register_test_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_register_test, 0xa2cfdbd3, 0x2bbf, 0x4b1c, 0xa4,0x14, 0x5a,0x59,0x04,0xe6,0x34,0xc9);

/*****************************************************************************
 * Inon_ole interface
 */
#ifndef __Inon_ole_INTERFACE_DEFINED__
#define __Inon_ole_INTERFACE_DEFINED__

DEFINE_GUID(IID_Inon_ole, 0x06c1f5f0, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f0-ea49-44f9-8e3b-4be00c7a0689")
Inon_ole : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Inon_ole, 0x06c1f5f0, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Inon_oleVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Inon_ole *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Inon_ole *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Inon_ole *This);

    /*** Inon_ole methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Inon_ole *This);

    END_INTERFACE
} Inon_oleVtbl;

interface Inon_ole {
    CONST_VTBL Inon_oleVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Inon_ole_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Inon_ole_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Inon_ole_Release(This) (This)->lpVtbl->Release(This)
/*** Inon_ole methods ***/
#define Inon_ole_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Inon_ole_QueryInterface(Inon_ole* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Inon_ole_AddRef(Inon_ole* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Inon_ole_Release(Inon_ole* This) {
    return This->lpVtbl->Release(This);
}
/*** Inon_ole methods ***/
static __WIDL_INLINE HRESULT Inon_ole_test(Inon_ole* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Inon_ole_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Inon_ole_from_disp interface
 */
#ifndef __Inon_ole_from_disp_INTERFACE_DEFINED__
#define __Inon_ole_from_disp_INTERFACE_DEFINED__

DEFINE_GUID(IID_Inon_ole_from_disp, 0x06c1f5f1, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f1-ea49-44f9-8e3b-4be00c7a0689")
Inon_ole_from_disp : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Inon_ole_from_disp, 0x06c1f5f1, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Inon_ole_from_dispVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Inon_ole_from_disp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Inon_ole_from_disp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Inon_ole_from_disp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Inon_ole_from_disp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Inon_ole_from_disp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Inon_ole_from_disp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Inon_ole_from_disp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** Inon_ole_from_disp methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Inon_ole_from_disp *This);

    END_INTERFACE
} Inon_ole_from_dispVtbl;

interface Inon_ole_from_disp {
    CONST_VTBL Inon_ole_from_dispVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Inon_ole_from_disp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Inon_ole_from_disp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Inon_ole_from_disp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Inon_ole_from_disp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Inon_ole_from_disp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Inon_ole_from_disp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Inon_ole_from_disp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** Inon_ole_from_disp methods ***/
#define Inon_ole_from_disp_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Inon_ole_from_disp_QueryInterface(Inon_ole_from_disp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Inon_ole_from_disp_AddRef(Inon_ole_from_disp* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Inon_ole_from_disp_Release(Inon_ole_from_disp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Inon_ole_from_disp_GetTypeInfoCount(Inon_ole_from_disp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Inon_ole_from_disp_GetTypeInfo(Inon_ole_from_disp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Inon_ole_from_disp_GetIDsOfNames(Inon_ole_from_disp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Inon_ole_from_disp_Invoke(Inon_ole_from_disp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** Inon_ole_from_disp methods ***/
static __WIDL_INLINE HRESULT Inon_ole_from_disp_test(Inon_ole_from_disp* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Inon_ole_from_disp_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Iole interface
 */
#ifndef __Iole_INTERFACE_DEFINED__
#define __Iole_INTERFACE_DEFINED__

DEFINE_GUID(IID_Iole, 0x06c1f5f2, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f2-ea49-44f9-8e3b-4be00c7a0689")
Iole : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Iole, 0x06c1f5f2, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct IoleVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Iole *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Iole *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Iole *This);

    /*** Iole methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Iole *This);

    END_INTERFACE
} IoleVtbl;

interface Iole {
    CONST_VTBL IoleVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Iole_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Iole_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Iole_Release(This) (This)->lpVtbl->Release(This)
/*** Iole methods ***/
#define Iole_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Iole_QueryInterface(Iole* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Iole_AddRef(Iole* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Iole_Release(Iole* This) {
    return This->lpVtbl->Release(This);
}
/*** Iole methods ***/
static __WIDL_INLINE HRESULT Iole_test(Iole* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Iole_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Iole_from_disp interface
 */
#ifndef __Iole_from_disp_INTERFACE_DEFINED__
#define __Iole_from_disp_INTERFACE_DEFINED__

DEFINE_GUID(IID_Iole_from_disp, 0x06c1f5f3, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f3-ea49-44f9-8e3b-4be00c7a0689")
Iole_from_disp : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Iole_from_disp, 0x06c1f5f3, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Iole_from_dispVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Iole_from_disp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Iole_from_disp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Iole_from_disp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Iole_from_disp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Iole_from_disp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Iole_from_disp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Iole_from_disp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** Iole_from_disp methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Iole_from_disp *This);

    END_INTERFACE
} Iole_from_dispVtbl;

interface Iole_from_disp {
    CONST_VTBL Iole_from_dispVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Iole_from_disp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Iole_from_disp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Iole_from_disp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Iole_from_disp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Iole_from_disp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Iole_from_disp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Iole_from_disp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** Iole_from_disp methods ***/
#define Iole_from_disp_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Iole_from_disp_QueryInterface(Iole_from_disp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Iole_from_disp_AddRef(Iole_from_disp* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Iole_from_disp_Release(Iole_from_disp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Iole_from_disp_GetTypeInfoCount(Iole_from_disp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Iole_from_disp_GetTypeInfo(Iole_from_disp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Iole_from_disp_GetIDsOfNames(Iole_from_disp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Iole_from_disp_Invoke(Iole_from_disp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** Iole_from_disp methods ***/
static __WIDL_INLINE HRESULT Iole_from_disp_test(Iole_from_disp* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Iole_from_disp_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Inon_ole_dual interface
 */
#ifndef __Inon_ole_dual_INTERFACE_DEFINED__
#define __Inon_ole_dual_INTERFACE_DEFINED__

DEFINE_GUID(IID_Inon_ole_dual, 0x06c1f5f4, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f4-ea49-44f9-8e3b-4be00c7a0689")
Inon_ole_dual : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Inon_ole_dual, 0x06c1f5f4, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Inon_ole_dualVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Inon_ole_dual *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Inon_ole_dual *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Inon_ole_dual *This);

    /*** Inon_ole_dual methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Inon_ole_dual *This);

    END_INTERFACE
} Inon_ole_dualVtbl;

interface Inon_ole_dual {
    CONST_VTBL Inon_ole_dualVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Inon_ole_dual_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Inon_ole_dual_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Inon_ole_dual_Release(This) (This)->lpVtbl->Release(This)
/*** Inon_ole_dual methods ***/
#define Inon_ole_dual_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Inon_ole_dual_QueryInterface(Inon_ole_dual* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Inon_ole_dual_AddRef(Inon_ole_dual* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Inon_ole_dual_Release(Inon_ole_dual* This) {
    return This->lpVtbl->Release(This);
}
/*** Inon_ole_dual methods ***/
static __WIDL_INLINE HRESULT Inon_ole_dual_test(Inon_ole_dual* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Inon_ole_dual_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Iole_dual interface
 */
#ifndef __Iole_dual_INTERFACE_DEFINED__
#define __Iole_dual_INTERFACE_DEFINED__

DEFINE_GUID(IID_Iole_dual, 0x06c1f5f5, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f5-ea49-44f9-8e3b-4be00c7a0689")
Iole_dual : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Iole_dual, 0x06c1f5f5, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Iole_dualVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Iole_dual *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Iole_dual *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Iole_dual *This);

    /*** Iole_dual methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Iole_dual *This);

    END_INTERFACE
} Iole_dualVtbl;

interface Iole_dual {
    CONST_VTBL Iole_dualVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Iole_dual_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Iole_dual_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Iole_dual_Release(This) (This)->lpVtbl->Release(This)
/*** Iole_dual methods ***/
#define Iole_dual_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Iole_dual_QueryInterface(Iole_dual* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Iole_dual_AddRef(Iole_dual* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Iole_dual_Release(Iole_dual* This) {
    return This->lpVtbl->Release(This);
}
/*** Iole_dual methods ***/
static __WIDL_INLINE HRESULT Iole_dual_test(Iole_dual* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Iole_dual_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Inon_ole_dual_from_disp interface
 */
#ifndef __Inon_ole_dual_from_disp_INTERFACE_DEFINED__
#define __Inon_ole_dual_from_disp_INTERFACE_DEFINED__

DEFINE_GUID(IID_Inon_ole_dual_from_disp, 0x06c1f5f6, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f6-ea49-44f9-8e3b-4be00c7a0689")
Inon_ole_dual_from_disp : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Inon_ole_dual_from_disp, 0x06c1f5f6, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Inon_ole_dual_from_dispVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Inon_ole_dual_from_disp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Inon_ole_dual_from_disp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Inon_ole_dual_from_disp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Inon_ole_dual_from_disp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Inon_ole_dual_from_disp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Inon_ole_dual_from_disp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Inon_ole_dual_from_disp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** Inon_ole_dual_from_disp methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Inon_ole_dual_from_disp *This);

    END_INTERFACE
} Inon_ole_dual_from_dispVtbl;

interface Inon_ole_dual_from_disp {
    CONST_VTBL Inon_ole_dual_from_dispVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Inon_ole_dual_from_disp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Inon_ole_dual_from_disp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Inon_ole_dual_from_disp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Inon_ole_dual_from_disp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Inon_ole_dual_from_disp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Inon_ole_dual_from_disp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Inon_ole_dual_from_disp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** Inon_ole_dual_from_disp methods ***/
#define Inon_ole_dual_from_disp_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Inon_ole_dual_from_disp_QueryInterface(Inon_ole_dual_from_disp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Inon_ole_dual_from_disp_AddRef(Inon_ole_dual_from_disp* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Inon_ole_dual_from_disp_Release(Inon_ole_dual_from_disp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Inon_ole_dual_from_disp_GetTypeInfoCount(Inon_ole_dual_from_disp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Inon_ole_dual_from_disp_GetTypeInfo(Inon_ole_dual_from_disp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Inon_ole_dual_from_disp_GetIDsOfNames(Inon_ole_dual_from_disp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Inon_ole_dual_from_disp_Invoke(Inon_ole_dual_from_disp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** Inon_ole_dual_from_disp methods ***/
static __WIDL_INLINE HRESULT Inon_ole_dual_from_disp_test(Inon_ole_dual_from_disp* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Inon_ole_dual_from_disp_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Iole_dual_from_disp interface
 */
#ifndef __Iole_dual_from_disp_INTERFACE_DEFINED__
#define __Iole_dual_from_disp_INTERFACE_DEFINED__

DEFINE_GUID(IID_Iole_dual_from_disp, 0x06c1f5f7, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f7-ea49-44f9-8e3b-4be00c7a0689")
Iole_dual_from_disp : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Iole_dual_from_disp, 0x06c1f5f7, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Iole_dual_from_dispVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Iole_dual_from_disp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Iole_dual_from_disp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Iole_dual_from_disp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Iole_dual_from_disp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Iole_dual_from_disp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Iole_dual_from_disp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Iole_dual_from_disp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** Iole_dual_from_disp methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        Iole_dual_from_disp *This);

    END_INTERFACE
} Iole_dual_from_dispVtbl;

interface Iole_dual_from_disp {
    CONST_VTBL Iole_dual_from_dispVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Iole_dual_from_disp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Iole_dual_from_disp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Iole_dual_from_disp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Iole_dual_from_disp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Iole_dual_from_disp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Iole_dual_from_disp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Iole_dual_from_disp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** Iole_dual_from_disp methods ***/
#define Iole_dual_from_disp_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Iole_dual_from_disp_QueryInterface(Iole_dual_from_disp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Iole_dual_from_disp_AddRef(Iole_dual_from_disp* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Iole_dual_from_disp_Release(Iole_dual_from_disp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Iole_dual_from_disp_GetTypeInfoCount(Iole_dual_from_disp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Iole_dual_from_disp_GetTypeInfo(Iole_dual_from_disp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Iole_dual_from_disp_GetIDsOfNames(Iole_dual_from_disp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Iole_dual_from_disp_Invoke(Iole_dual_from_disp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** Iole_dual_from_disp methods ***/
static __WIDL_INLINE HRESULT Iole_dual_from_disp_test(Iole_dual_from_disp* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __Iole_dual_from_disp_INTERFACE_DEFINED__ */

/*****************************************************************************
 * Idisp dispinterface
 */
#ifndef __Idisp_DISPINTERFACE_DEFINED__
#define __Idisp_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Idisp, 0x06c1f5f8, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f8-ea49-44f9-8e3b-4be00c7a0689")
Idisp : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Idisp, 0x06c1f5f8, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct IdispVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Idisp *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Idisp *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Idisp *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Idisp *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Idisp *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Idisp *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Idisp *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} IdispVtbl;

interface Idisp {
    CONST_VTBL IdispVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Idisp_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Idisp_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Idisp_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Idisp_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Idisp_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Idisp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Idisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Idisp_QueryInterface(Idisp* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Idisp_AddRef(Idisp* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Idisp_Release(Idisp* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Idisp_GetTypeInfoCount(Idisp* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Idisp_GetTypeInfo(Idisp* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Idisp_GetIDsOfNames(Idisp* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Idisp_Invoke(Idisp* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Idisp_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * Idisp_from_non_ole_iface dispinterface
 */
#ifndef __Idisp_from_non_ole_iface_DISPINTERFACE_DEFINED__
#define __Idisp_from_non_ole_iface_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Idisp_from_non_ole_iface, 0x06c1f5f9, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5f9-ea49-44f9-8e3b-4be00c7a0689")
Idisp_from_non_ole_iface : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Idisp_from_non_ole_iface, 0x06c1f5f9, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Idisp_from_non_ole_ifaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Idisp_from_non_ole_iface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Idisp_from_non_ole_iface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Idisp_from_non_ole_iface *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Idisp_from_non_ole_iface *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Idisp_from_non_ole_iface *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Idisp_from_non_ole_iface *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Idisp_from_non_ole_iface *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} Idisp_from_non_ole_ifaceVtbl;

interface Idisp_from_non_ole_iface {
    CONST_VTBL Idisp_from_non_ole_ifaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Idisp_from_non_ole_iface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Idisp_from_non_ole_iface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Idisp_from_non_ole_iface_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Idisp_from_non_ole_iface_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Idisp_from_non_ole_iface_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Idisp_from_non_ole_iface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Idisp_from_non_ole_iface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Idisp_from_non_ole_iface_QueryInterface(Idisp_from_non_ole_iface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Idisp_from_non_ole_iface_AddRef(Idisp_from_non_ole_iface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Idisp_from_non_ole_iface_Release(Idisp_from_non_ole_iface* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Idisp_from_non_ole_iface_GetTypeInfoCount(Idisp_from_non_ole_iface* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Idisp_from_non_ole_iface_GetTypeInfo(Idisp_from_non_ole_iface* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Idisp_from_non_ole_iface_GetIDsOfNames(Idisp_from_non_ole_iface* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Idisp_from_non_ole_iface_Invoke(Idisp_from_non_ole_iface* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Idisp_from_non_ole_iface_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * Idisp_from_ole_from_disp_iface dispinterface
 */
#ifndef __Idisp_from_ole_from_disp_iface_DISPINTERFACE_DEFINED__
#define __Idisp_from_ole_from_disp_iface_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_Idisp_from_ole_from_disp_iface, 0x06c1f5fa, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("06c1f5fa-ea49-44f9-8e3b-4be00c7a0689")
Idisp_from_ole_from_disp_iface : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(Idisp_from_ole_from_disp_iface, 0x06c1f5fa, 0xea49, 0x44f9, 0x8e,0x3b, 0x4b,0xe0,0x0c,0x7a,0x06,0x89)
#endif
#else
typedef struct Idisp_from_ole_from_disp_ifaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        Idisp_from_ole_from_disp_iface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        Idisp_from_ole_from_disp_iface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        Idisp_from_ole_from_disp_iface *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        Idisp_from_ole_from_disp_iface *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        Idisp_from_ole_from_disp_iface *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        Idisp_from_ole_from_disp_iface *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        Idisp_from_ole_from_disp_iface *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} Idisp_from_ole_from_disp_ifaceVtbl;

interface Idisp_from_ole_from_disp_iface {
    CONST_VTBL Idisp_from_ole_from_disp_ifaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define Idisp_from_ole_from_disp_iface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define Idisp_from_ole_from_disp_iface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define Idisp_from_ole_from_disp_iface_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define Idisp_from_ole_from_disp_iface_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define Idisp_from_ole_from_disp_iface_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define Idisp_from_ole_from_disp_iface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define Idisp_from_ole_from_disp_iface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT Idisp_from_ole_from_disp_iface_QueryInterface(Idisp_from_ole_from_disp_iface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG Idisp_from_ole_from_disp_iface_AddRef(Idisp_from_ole_from_disp_iface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG Idisp_from_ole_from_disp_iface_Release(Idisp_from_ole_from_disp_iface* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT Idisp_from_ole_from_disp_iface_GetTypeInfoCount(Idisp_from_ole_from_disp_iface* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT Idisp_from_ole_from_disp_iface_GetTypeInfo(Idisp_from_ole_from_disp_iface* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT Idisp_from_ole_from_disp_iface_GetIDsOfNames(Idisp_from_ole_from_disp_iface* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT Idisp_from_ole_from_disp_iface_Invoke(Idisp_from_ole_from_disp_iface* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __Idisp_from_ole_from_disp_iface_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ICollection interface
 */
#ifndef __ICollection_INTERFACE_DEFINED__
#define __ICollection_INTERFACE_DEFINED__

DEFINE_GUID(IID_ICollection, 0xfed318b2, 0xc2ed, 0x11e7, 0xab,0xc4, 0xce,0xc2,0x78,0xb6,0xb5,0x0a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("fed318b2-c2ed-11e7-abc4-cec278b6b50a")
ICollection : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE Item(
        int i,
        int *p) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ICollection, 0xfed318b2, 0xc2ed, 0x11e7, 0xab,0xc4, 0xce,0xc2,0x78,0xb6,0xb5,0x0a)
#endif
#else
typedef struct ICollectionVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ICollection *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ICollection *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ICollection *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ICollection *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ICollection *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ICollection *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ICollection *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ICollection methods ***/
    HRESULT (STDMETHODCALLTYPE *Item)(
        ICollection *This,
        int i,
        int *p);

    END_INTERFACE
} ICollectionVtbl;

interface ICollection {
    CONST_VTBL ICollectionVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ICollection_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ICollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ICollection_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ICollection_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ICollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ICollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ICollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ICollection methods ***/
#define ICollection_Item(This,i,p) (This)->lpVtbl->Item(This,i,p)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ICollection_QueryInterface(ICollection* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ICollection_AddRef(ICollection* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ICollection_Release(ICollection* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ICollection_GetTypeInfoCount(ICollection* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ICollection_GetTypeInfo(ICollection* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ICollection_GetIDsOfNames(ICollection* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ICollection_Invoke(ICollection* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ICollection methods ***/
static __WIDL_INLINE HRESULT ICollection_Item(ICollection* This,int i,int *p) {
    return This->lpVtbl->Item(This,i,p);
}
#endif
#endif

#endif


#endif  /* __ICollection_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IInvokeTest interface
 */
#ifndef __IInvokeTest_INTERFACE_DEFINED__
#define __IInvokeTest_INTERFACE_DEFINED__

DEFINE_GUID(IID_IInvokeTest, 0xf1b68c3b, 0x02a3, 0x4110, 0xbc,0x4c, 0xcf,0x9b,0xc7,0xe7,0xf1,0x77);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f1b68c3b-02a3-4110-bc4c-cf9bc7e7f177")
IInvokeTest : public IDispatch
{
    virtual LONG STDMETHODCALLTYPE get_test(
        LONG i) = 0;

    virtual LONG STDMETHODCALLTYPE putref_testprop(
        LONG *i) = 0;

    virtual LONG STDMETHODCALLTYPE putref_testprop2(
        IUnknown *i) = 0;

    virtual HRESULT STDMETHODCALLTYPE testfunc(
        int i,
        int *p) = 0;

    virtual HRESULT STDMETHODCALLTYPE get_testget(
        ICollection **p) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IInvokeTest, 0xf1b68c3b, 0x02a3, 0x4110, 0xbc,0x4c, 0xcf,0x9b,0xc7,0xe7,0xf1,0x77)
#endif
#else
typedef struct IInvokeTestVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IInvokeTest *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IInvokeTest *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IInvokeTest *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IInvokeTest *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IInvokeTest *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IInvokeTest *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IInvokeTest *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IInvokeTest methods ***/
    LONG (STDMETHODCALLTYPE *get_test)(
        IInvokeTest *This,
        LONG i);

    LONG (STDMETHODCALLTYPE *putref_testprop)(
        IInvokeTest *This,
        LONG *i);

    LONG (STDMETHODCALLTYPE *putref_testprop2)(
        IInvokeTest *This,
        IUnknown *i);

    HRESULT (STDMETHODCALLTYPE *testfunc)(
        IInvokeTest *This,
        int i,
        int *p);

    HRESULT (STDMETHODCALLTYPE *get_testget)(
        IInvokeTest *This,
        ICollection **p);

    END_INTERFACE
} IInvokeTestVtbl;

interface IInvokeTest {
    CONST_VTBL IInvokeTestVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IInvokeTest_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IInvokeTest_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IInvokeTest_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IInvokeTest_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IInvokeTest_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IInvokeTest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IInvokeTest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IInvokeTest methods ***/
#define IInvokeTest_get_test(This,i) (This)->lpVtbl->get_test(This,i)
#define IInvokeTest_putref_testprop(This,i) (This)->lpVtbl->putref_testprop(This,i)
#define IInvokeTest_putref_testprop2(This,i) (This)->lpVtbl->putref_testprop2(This,i)
#define IInvokeTest_testfunc(This,i,p) (This)->lpVtbl->testfunc(This,i,p)
#define IInvokeTest_get_testget(This,p) (This)->lpVtbl->get_testget(This,p)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT IInvokeTest_QueryInterface(IInvokeTest* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG IInvokeTest_AddRef(IInvokeTest* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG IInvokeTest_Release(IInvokeTest* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT IInvokeTest_GetTypeInfoCount(IInvokeTest* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT IInvokeTest_GetTypeInfo(IInvokeTest* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT IInvokeTest_GetIDsOfNames(IInvokeTest* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT IInvokeTest_Invoke(IInvokeTest* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IInvokeTest methods ***/
static __WIDL_INLINE LONG IInvokeTest_get_test(IInvokeTest* This,LONG i) {
    return This->lpVtbl->get_test(This,i);
}
static __WIDL_INLINE LONG IInvokeTest_putref_testprop(IInvokeTest* This,LONG *i) {
    return This->lpVtbl->putref_testprop(This,i);
}
static __WIDL_INLINE LONG IInvokeTest_putref_testprop2(IInvokeTest* This,IUnknown *i) {
    return This->lpVtbl->putref_testprop2(This,i);
}
static __WIDL_INLINE HRESULT IInvokeTest_testfunc(IInvokeTest* This,int i,int *p) {
    return This->lpVtbl->testfunc(This,i,p);
}
static __WIDL_INLINE HRESULT IInvokeTest_get_testget(IInvokeTest* This,ICollection **p) {
    return This->lpVtbl->get_testget(This,p);
}
#endif
#endif

#endif


#endif  /* __IInvokeTest_INTERFACE_DEFINED__ */

struct test_struct3 {
    UINT32 field;
    HRESULT hr;
};
#endif /* __register_test_LIBRARY_DEFINED__ */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __test_reg_h__ */
