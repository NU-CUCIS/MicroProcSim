/*** Autogenerated by WIDL 8.0-rc1 from ../wine-source/dlls/oleaut32/tests/test_tlb.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __test_tlb_h__
#define __test_tlb_h__

#ifndef __WIDL_INLINE
#if defined(__cplusplus) || defined(_MSC_VER)
#define __WIDL_INLINE inline
#elif defined(__GNUC__)
#define __WIDL_INLINE __inline__
#endif
#endif

/* Forward declarations */

#ifndef __test_iface_FWD_DEFINED__
#define __test_iface_FWD_DEFINED__
typedef interface test_iface test_iface;
#ifdef __cplusplus
interface test_iface;
#endif /* __cplusplus */
#endif

#ifndef __parent_iface_FWD_DEFINED__
#define __parent_iface_FWD_DEFINED__
typedef interface parent_iface parent_iface;
#ifdef __cplusplus
interface parent_iface;
#endif /* __cplusplus */
#endif

#ifndef __child_iface_FWD_DEFINED__
#define __child_iface_FWD_DEFINED__
typedef interface child_iface child_iface;
#ifdef __cplusplus
interface child_iface;
#endif /* __cplusplus */
#endif

#ifndef __IDualIface_FWD_DEFINED__
#define __IDualIface_FWD_DEFINED__
typedef interface IDualIface IDualIface;
#ifdef __cplusplus
interface IDualIface;
#endif /* __cplusplus */
#endif

#ifndef __ISimpleIface_FWD_DEFINED__
#define __ISimpleIface_FWD_DEFINED__
typedef interface ISimpleIface ISimpleIface;
#ifdef __cplusplus
interface ISimpleIface;
#endif /* __cplusplus */
#endif

#ifndef __ITestIface_FWD_DEFINED__
#define __ITestIface_FWD_DEFINED__
typedef interface ITestIface ITestIface;
#ifdef __cplusplus
interface ITestIface;
#endif /* __cplusplus */
#endif

#ifndef __ITestDispatch_FWD_DEFINED__
#define __ITestDispatch_FWD_DEFINED__
typedef interface ITestDispatch ITestDispatch;
#ifdef __cplusplus
interface ITestDispatch;
#endif /* __cplusplus */
#endif

#ifndef __ITestDispDual_FWD_DEFINED__
#define __ITestDispDual_FWD_DEFINED__
typedef interface ITestDispDual ITestDispDual;
#ifdef __cplusplus
interface ITestDispDual;
#endif /* __cplusplus */
#endif

#ifndef __ITestDispInherit_FWD_DEFINED__
#define __ITestDispInherit_FWD_DEFINED__
typedef interface ITestDispInherit ITestDispInherit;
#ifdef __cplusplus
interface ITestDispInherit;
#endif /* __cplusplus */
#endif

#ifndef __custdata_interface_FWD_DEFINED__
#define __custdata_interface_FWD_DEFINED__
typedef interface custdata_interface custdata_interface;
#ifdef __cplusplus
interface custdata_interface;
#endif /* __cplusplus */
#endif

#ifndef __custdata_dispatch_FWD_DEFINED__
#define __custdata_dispatch_FWD_DEFINED__
typedef interface custdata_dispatch custdata_dispatch;
#ifdef __cplusplus
interface custdata_dispatch;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __Test_LIBRARY_DEFINED__
#define __Test_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_Test, 0x8b05fe77, 0x4a6c, 0x4133, 0xb9,0xcd, 0x8f,0x81,0x74,0x7a,0xf7,0x84);

typedef struct g {
    int g1;
} g;
/*****************************************************************************
 * test_iface interface
 */
#ifndef __test_iface_INTERFACE_DEFINED__
#define __test_iface_INTERFACE_DEFINED__

DEFINE_GUID(IID_test_iface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0x00,0x02);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("b14b6bb5-904e-4ff9-b247-bd361f7a0002")
test_iface : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test(
        g *ptr) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(test_iface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0x00,0x02)
#endif
#else
typedef struct test_ifaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        test_iface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        test_iface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        test_iface *This);

    /*** test_iface methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        test_iface *This,
        g *ptr);

    END_INTERFACE
} test_ifaceVtbl;

interface test_iface {
    CONST_VTBL test_ifaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define test_iface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define test_iface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define test_iface_Release(This) (This)->lpVtbl->Release(This)
/*** test_iface methods ***/
#define test_iface_test(This,ptr) (This)->lpVtbl->test(This,ptr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT test_iface_QueryInterface(test_iface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG test_iface_AddRef(test_iface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG test_iface_Release(test_iface* This) {
    return This->lpVtbl->Release(This);
}
/*** test_iface methods ***/
static __WIDL_INLINE HRESULT test_iface_test(test_iface* This,g *ptr) {
    return This->lpVtbl->test(This,ptr);
}
#endif
#endif

#endif


#endif  /* __test_iface_INTERFACE_DEFINED__ */

#ifndef __child_iface_FWD_DEFINED__
#define __child_iface_FWD_DEFINED__
typedef interface child_iface child_iface;
#ifdef __cplusplus
interface child_iface;
#endif /* __cplusplus */
#endif

#ifndef __parent_iface_FWD_DEFINED__
#define __parent_iface_FWD_DEFINED__
typedef interface parent_iface parent_iface;
#ifdef __cplusplus
interface parent_iface;
#endif /* __cplusplus */
#endif

/*****************************************************************************
 * parent_iface interface
 */
#ifndef __parent_iface_INTERFACE_DEFINED__
#define __parent_iface_INTERFACE_DEFINED__

DEFINE_GUID(IID_parent_iface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0xa0,0x01);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("b14b6bb5-904e-4ff9-b247-bd361f7aa001")
parent_iface : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE test1(
        child_iface **iface) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(parent_iface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0xa0,0x01)
#endif
#else
typedef struct parent_ifaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        parent_iface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        parent_iface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        parent_iface *This);

    /*** parent_iface methods ***/
    HRESULT (STDMETHODCALLTYPE *test1)(
        parent_iface *This,
        child_iface **iface);

    END_INTERFACE
} parent_ifaceVtbl;

interface parent_iface {
    CONST_VTBL parent_ifaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define parent_iface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define parent_iface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define parent_iface_Release(This) (This)->lpVtbl->Release(This)
/*** parent_iface methods ***/
#define parent_iface_test1(This,iface) (This)->lpVtbl->test1(This,iface)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT parent_iface_QueryInterface(parent_iface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG parent_iface_AddRef(parent_iface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG parent_iface_Release(parent_iface* This) {
    return This->lpVtbl->Release(This);
}
/*** parent_iface methods ***/
static __WIDL_INLINE HRESULT parent_iface_test1(parent_iface* This,child_iface **iface) {
    return This->lpVtbl->test1(This,iface);
}
#endif
#endif

#endif


#endif  /* __parent_iface_INTERFACE_DEFINED__ */

/*****************************************************************************
 * child_iface interface
 */
#ifndef __child_iface_INTERFACE_DEFINED__
#define __child_iface_INTERFACE_DEFINED__

DEFINE_GUID(IID_child_iface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0xa0,0x02);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("b14b6bb5-904e-4ff9-b247-bd361f7aa002")
child_iface : public parent_iface
{
    virtual HRESULT STDMETHODCALLTYPE test2(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(child_iface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0xa0,0x02)
#endif
#else
typedef struct child_ifaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        child_iface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        child_iface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        child_iface *This);

    /*** parent_iface methods ***/
    HRESULT (STDMETHODCALLTYPE *test1)(
        child_iface *This,
        child_iface **iface);

    /*** child_iface methods ***/
    HRESULT (STDMETHODCALLTYPE *test2)(
        child_iface *This);

    END_INTERFACE
} child_ifaceVtbl;

interface child_iface {
    CONST_VTBL child_ifaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define child_iface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define child_iface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define child_iface_Release(This) (This)->lpVtbl->Release(This)
/*** parent_iface methods ***/
#define child_iface_test1(This,iface) (This)->lpVtbl->test1(This,iface)
/*** child_iface methods ***/
#define child_iface_test2(This) (This)->lpVtbl->test2(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT child_iface_QueryInterface(child_iface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG child_iface_AddRef(child_iface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG child_iface_Release(child_iface* This) {
    return This->lpVtbl->Release(This);
}
/*** parent_iface methods ***/
static __WIDL_INLINE HRESULT child_iface_test1(child_iface* This,child_iface **iface) {
    return This->lpVtbl->test1(This,iface);
}
/*** child_iface methods ***/
static __WIDL_INLINE HRESULT child_iface_test2(child_iface* This) {
    return This->lpVtbl->test2(This);
}
#endif
#endif

#endif


#endif  /* __child_iface_INTERFACE_DEFINED__ */

struct _n {
    int n1;
};
typedef struct _n n;
typedef struct _n nn;
struct _m {
    int m1;
};
typedef struct _m m;
typedef struct _m mm;
/*****************************************************************************
 * IDualIface interface
 */
#ifndef __IDualIface_INTERFACE_DEFINED__
#define __IDualIface_INTERFACE_DEFINED__

DEFINE_GUID(IID_IDualIface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0xae,0xdd);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("b14b6bb5-904e-4ff9-b247-bd361f7aaedd")
IDualIface : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IDualIface, 0xb14b6bb5, 0x904e, 0x4ff9, 0xb2,0x47, 0xbd,0x36,0x1f,0x7a,0xae,0xdd)
#endif
#else
typedef struct IDualIfaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IDualIface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IDualIface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IDualIface *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IDualIface *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IDualIface *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IDualIface *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IDualIface *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IDualIface methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        IDualIface *This);

    END_INTERFACE
} IDualIfaceVtbl;

interface IDualIface {
    CONST_VTBL IDualIfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IDualIface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IDualIface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IDualIface_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IDualIface_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IDualIface_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IDualIface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IDualIface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IDualIface methods ***/
#define IDualIface_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT IDualIface_QueryInterface(IDualIface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG IDualIface_AddRef(IDualIface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG IDualIface_Release(IDualIface* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT IDualIface_GetTypeInfoCount(IDualIface* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT IDualIface_GetTypeInfo(IDualIface* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT IDualIface_GetIDsOfNames(IDualIface* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT IDualIface_Invoke(IDualIface* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IDualIface methods ***/
static __WIDL_INLINE HRESULT IDualIface_test(IDualIface* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __IDualIface_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ISimpleIface interface
 */
#ifndef __ISimpleIface_INTERFACE_DEFINED__
#define __ISimpleIface_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISimpleIface, 0xec5dfcd6, 0xeeb0, 0x4cd6, 0xb5,0x1e, 0x80,0x30,0xe1,0xda,0xc0,0x09);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("ec5dfcd6-eeb0-4cd6-b51e-8030e1dac009")
ISimpleIface : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISimpleIface, 0xec5dfcd6, 0xeeb0, 0x4cd6, 0xb5,0x1e, 0x80,0x30,0xe1,0xda,0xc0,0x09)
#endif
#else
typedef struct ISimpleIfaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISimpleIface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISimpleIface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISimpleIface *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ISimpleIface *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ISimpleIface *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ISimpleIface *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ISimpleIface *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ISimpleIface methods ***/
    HRESULT (STDMETHODCALLTYPE *test)(
        ISimpleIface *This);

    END_INTERFACE
} ISimpleIfaceVtbl;

interface ISimpleIface {
    CONST_VTBL ISimpleIfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISimpleIface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISimpleIface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISimpleIface_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ISimpleIface_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ISimpleIface_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ISimpleIface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ISimpleIface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ISimpleIface methods ***/
#define ISimpleIface_test(This) (This)->lpVtbl->test(This)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ISimpleIface_QueryInterface(ISimpleIface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ISimpleIface_AddRef(ISimpleIface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ISimpleIface_Release(ISimpleIface* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ISimpleIface_GetTypeInfoCount(ISimpleIface* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ISimpleIface_GetTypeInfo(ISimpleIface* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ISimpleIface_GetIDsOfNames(ISimpleIface* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ISimpleIface_Invoke(ISimpleIface* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ISimpleIface methods ***/
static __WIDL_INLINE HRESULT ISimpleIface_test(ISimpleIface* This) {
    return This->lpVtbl->test(This);
}
#endif
#endif

#endif


#endif  /* __ISimpleIface_INTERFACE_DEFINED__ */

struct test_struct {
    HRESULT hr;
    VARIANT_BOOL b;
    IDispatch *disp;
    BSTR bstr;
};
struct test_struct2 {
    HRESULT hr;
    VARIANT_BOOL b;
    IDispatch *disp;
    BSTR bstr;
};
typedef int t_INT;
typedef enum _a {
    a1 = 0,
    a2 = 1
} a;
typedef enum aa {
    aa1 = 0,
    aa2 = 1
} aa;
typedef enum _b {
    b1 = 0,
    b2 = 1
} b;
typedef enum bb {
    bb1 = 0,
    bb2 = 1
} bb;
typedef enum _c {
    c1 = 0,
    c2 = 1
} c;
typedef enum cc {
    cc1 = 0,
    cc2 = 1
} cc;
typedef enum _d {
    d1 = 0,
    d2 = 1
} d;
typedef enum dd {
    dd1 = 0,
    dd2 = 1
} dd;
typedef struct _e {
    int e1;
} e;
typedef struct ee {
    int ee1;
} ee;
typedef union _f {
    int f1;
    BSTR *f2;
} f;
typedef union ff {
    int ff1;
    BSTR *ff2;
} ff;
/*****************************************************************************
 * ITestIface interface
 */
#ifndef __ITestIface_INTERFACE_DEFINED__
#define __ITestIface_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITestIface, 0xec5dfcd6, 0xeeb0, 0x4cd6, 0xb5,0x1e, 0x80,0x30,0xe1,0xda,0xc0,0x0a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("ec5dfcd6-eeb0-4cd6-b51e-8030e1dac00a")
ITestIface : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test1(
        a value) = 0;

    virtual HRESULT STDMETHODCALLTYPE test2(
        b value) = 0;

    virtual HRESULT STDMETHODCALLTYPE test3(
        c value) = 0;

    virtual HRESULT STDMETHODCALLTYPE test4(
        d value) = 0;

    virtual HRESULT STDMETHODCALLTYPE test5(
        e value) = 0;

    virtual HRESULT STDMETHODCALLTYPE test6(
        f value) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITestIface, 0xec5dfcd6, 0xeeb0, 0x4cd6, 0xb5,0x1e, 0x80,0x30,0xe1,0xda,0xc0,0x0a)
#endif
#else
typedef struct ITestIfaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITestIface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITestIface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITestIface *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ITestIface *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ITestIface *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ITestIface *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ITestIface *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ITestIface methods ***/
    HRESULT (STDMETHODCALLTYPE *test1)(
        ITestIface *This,
        a value);

    HRESULT (STDMETHODCALLTYPE *test2)(
        ITestIface *This,
        b value);

    HRESULT (STDMETHODCALLTYPE *test3)(
        ITestIface *This,
        c value);

    HRESULT (STDMETHODCALLTYPE *test4)(
        ITestIface *This,
        d value);

    HRESULT (STDMETHODCALLTYPE *test5)(
        ITestIface *This,
        e value);

    HRESULT (STDMETHODCALLTYPE *test6)(
        ITestIface *This,
        f value);

    END_INTERFACE
} ITestIfaceVtbl;

interface ITestIface {
    CONST_VTBL ITestIfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITestIface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITestIface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITestIface_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ITestIface_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ITestIface_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ITestIface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ITestIface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ITestIface methods ***/
#define ITestIface_test1(This,value) (This)->lpVtbl->test1(This,value)
#define ITestIface_test2(This,value) (This)->lpVtbl->test2(This,value)
#define ITestIface_test3(This,value) (This)->lpVtbl->test3(This,value)
#define ITestIface_test4(This,value) (This)->lpVtbl->test4(This,value)
#define ITestIface_test5(This,value) (This)->lpVtbl->test5(This,value)
#define ITestIface_test6(This,value) (This)->lpVtbl->test6(This,value)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ITestIface_QueryInterface(ITestIface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ITestIface_AddRef(ITestIface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ITestIface_Release(ITestIface* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ITestIface_GetTypeInfoCount(ITestIface* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ITestIface_GetTypeInfo(ITestIface* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ITestIface_GetIDsOfNames(ITestIface* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ITestIface_Invoke(ITestIface* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ITestIface methods ***/
static __WIDL_INLINE HRESULT ITestIface_test1(ITestIface* This,a value) {
    return This->lpVtbl->test1(This,value);
}
static __WIDL_INLINE HRESULT ITestIface_test2(ITestIface* This,b value) {
    return This->lpVtbl->test2(This,value);
}
static __WIDL_INLINE HRESULT ITestIface_test3(ITestIface* This,c value) {
    return This->lpVtbl->test3(This,value);
}
static __WIDL_INLINE HRESULT ITestIface_test4(ITestIface* This,d value) {
    return This->lpVtbl->test4(This,value);
}
static __WIDL_INLINE HRESULT ITestIface_test5(ITestIface* This,e value) {
    return This->lpVtbl->test5(This,value);
}
static __WIDL_INLINE HRESULT ITestIface_test6(ITestIface* This,f value) {
    return This->lpVtbl->test6(This,value);
}
#endif
#endif

#endif


#endif  /* __ITestIface_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ITestDispatch dispinterface
 */
#ifndef __ITestDispatch_DISPINTERFACE_DEFINED__
#define __ITestDispatch_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_ITestDispatch, 0x2d4430d5, 0x99ea, 0x4645, 0x85,0xf0, 0xc5,0x81,0x4b,0x72,0x80,0x4b);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("2d4430d5-99ea-4645-85f0-c5814b72804b")
ITestDispatch : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITestDispatch, 0x2d4430d5, 0x99ea, 0x4645, 0x85,0xf0, 0xc5,0x81,0x4b,0x72,0x80,0x4b)
#endif
#else
typedef struct ITestDispatchVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITestDispatch *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITestDispatch *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITestDispatch *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ITestDispatch *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ITestDispatch *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ITestDispatch *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ITestDispatch *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ITestDispatchVtbl;

interface ITestDispatch {
    CONST_VTBL ITestDispatchVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITestDispatch_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITestDispatch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITestDispatch_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ITestDispatch_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ITestDispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ITestDispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ITestDispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ITestDispatch_QueryInterface(ITestDispatch* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ITestDispatch_AddRef(ITestDispatch* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ITestDispatch_Release(ITestDispatch* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ITestDispatch_GetTypeInfoCount(ITestDispatch* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ITestDispatch_GetTypeInfo(ITestDispatch* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ITestDispatch_GetIDsOfNames(ITestDispatch* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ITestDispatch_Invoke(ITestDispatch* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __ITestDispatch_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * ITestDispDual interface
 */
#ifndef __ITestDispDual_INTERFACE_DEFINED__
#define __ITestDispDual_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITestDispDual, 0x79ca07f9, 0xac22, 0x44ac, 0x9a,0xaf, 0x81,0x1f,0x45,0x41,0x22,0x93);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("79ca07f9-ac22-44ac-9aaf-811f45412293")
ITestDispDual : public IDispatch
{
    virtual void STDMETHODCALLTYPE test_void(
        ) = 0;

    virtual void STDMETHODCALLTYPE test_void_retval(
        double *ret) = 0;

    virtual HRESULT STDMETHODCALLTYPE test_HRESULT(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE test_HRESULT_retval(
        double *ret) = 0;

    virtual int STDMETHODCALLTYPE test_int(
        ) = 0;

    virtual int STDMETHODCALLTYPE test_int_retval(
        double *ret) = 0;

    virtual HRESULT STDMETHODCALLTYPE parse_lcid(
        BSTR x,
        LONG lcid,
        double *ret) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITestDispDual, 0x79ca07f9, 0xac22, 0x44ac, 0x9a,0xaf, 0x81,0x1f,0x45,0x41,0x22,0x93)
#endif
#else
typedef struct ITestDispDualVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITestDispDual *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITestDispDual *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITestDispDual *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ITestDispDual *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ITestDispDual *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ITestDispDual *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ITestDispDual *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** ITestDispDual methods ***/
    void (STDMETHODCALLTYPE *test_void)(
        ITestDispDual *This);

    void (STDMETHODCALLTYPE *test_void_retval)(
        ITestDispDual *This,
        double *ret);

    HRESULT (STDMETHODCALLTYPE *test_HRESULT)(
        ITestDispDual *This);

    HRESULT (STDMETHODCALLTYPE *test_HRESULT_retval)(
        ITestDispDual *This,
        double *ret);

    int (STDMETHODCALLTYPE *test_int)(
        ITestDispDual *This);

    int (STDMETHODCALLTYPE *test_int_retval)(
        ITestDispDual *This,
        double *ret);

    HRESULT (STDMETHODCALLTYPE *parse_lcid)(
        ITestDispDual *This,
        BSTR x,
        LONG lcid,
        double *ret);

    END_INTERFACE
} ITestDispDualVtbl;

interface ITestDispDual {
    CONST_VTBL ITestDispDualVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITestDispDual_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITestDispDual_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITestDispDual_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ITestDispDual_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ITestDispDual_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ITestDispDual_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ITestDispDual_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** ITestDispDual methods ***/
#define ITestDispDual_test_void(This) (This)->lpVtbl->test_void(This)
#define ITestDispDual_test_void_retval(This,ret) (This)->lpVtbl->test_void_retval(This,ret)
#define ITestDispDual_test_HRESULT(This) (This)->lpVtbl->test_HRESULT(This)
#define ITestDispDual_test_HRESULT_retval(This,ret) (This)->lpVtbl->test_HRESULT_retval(This,ret)
#define ITestDispDual_test_int(This) (This)->lpVtbl->test_int(This)
#define ITestDispDual_test_int_retval(This,ret) (This)->lpVtbl->test_int_retval(This,ret)
#define ITestDispDual_parse_lcid(This,x,lcid,ret) (This)->lpVtbl->parse_lcid(This,x,lcid,ret)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ITestDispDual_QueryInterface(ITestDispDual* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ITestDispDual_AddRef(ITestDispDual* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ITestDispDual_Release(ITestDispDual* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ITestDispDual_GetTypeInfoCount(ITestDispDual* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ITestDispDual_GetTypeInfo(ITestDispDual* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ITestDispDual_GetIDsOfNames(ITestDispDual* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ITestDispDual_Invoke(ITestDispDual* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** ITestDispDual methods ***/
static __WIDL_INLINE void ITestDispDual_test_void(ITestDispDual* This) {
    This->lpVtbl->test_void(This);
}
static __WIDL_INLINE void ITestDispDual_test_void_retval(ITestDispDual* This,double *ret) {
    This->lpVtbl->test_void_retval(This,ret);
}
static __WIDL_INLINE HRESULT ITestDispDual_test_HRESULT(ITestDispDual* This) {
    return This->lpVtbl->test_HRESULT(This);
}
static __WIDL_INLINE HRESULT ITestDispDual_test_HRESULT_retval(ITestDispDual* This,double *ret) {
    return This->lpVtbl->test_HRESULT_retval(This,ret);
}
static __WIDL_INLINE int ITestDispDual_test_int(ITestDispDual* This) {
    return This->lpVtbl->test_int(This);
}
static __WIDL_INLINE int ITestDispDual_test_int_retval(ITestDispDual* This,double *ret) {
    return This->lpVtbl->test_int_retval(This,ret);
}
static __WIDL_INLINE HRESULT ITestDispDual_parse_lcid(ITestDispDual* This,BSTR x,LONG lcid,double *ret) {
    return This->lpVtbl->parse_lcid(This,x,lcid,ret);
}
#endif
#endif

#endif


#endif  /* __ITestDispDual_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ITestDispInherit dispinterface
 */
#ifndef __ITestDispInherit_DISPINTERFACE_DEFINED__
#define __ITestDispInherit_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_ITestDispInherit, 0xcdb105e3, 0x24fb, 0x4ae6, 0xb8,0x26, 0x80,0x1b,0x7b,0x2a,0x0a,0x07);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("cdb105e3-24fb-4ae6-b826-801b7b2a0a07")
ITestDispInherit : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITestDispInherit, 0xcdb105e3, 0x24fb, 0x4ae6, 0xb8,0x26, 0x80,0x1b,0x7b,0x2a,0x0a,0x07)
#endif
#else
typedef struct ITestDispInheritVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITestDispInherit *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITestDispInherit *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITestDispInherit *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        ITestDispInherit *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        ITestDispInherit *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        ITestDispInherit *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        ITestDispInherit *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} ITestDispInheritVtbl;

interface ITestDispInherit {
    CONST_VTBL ITestDispInheritVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITestDispInherit_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITestDispInherit_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITestDispInherit_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define ITestDispInherit_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define ITestDispInherit_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define ITestDispInherit_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define ITestDispInherit_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT ITestDispInherit_QueryInterface(ITestDispInherit* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG ITestDispInherit_AddRef(ITestDispInherit* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG ITestDispInherit_Release(ITestDispInherit* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT ITestDispInherit_GetTypeInfoCount(ITestDispInherit* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT ITestDispInherit_GetTypeInfo(ITestDispInherit* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT ITestDispInherit_GetIDsOfNames(ITestDispInherit* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT ITestDispInherit_Invoke(ITestDispInherit* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __ITestDispInherit_DISPINTERFACE_DEFINED__ */

/*****************************************************************************
 * custdata_interface interface
 */
#ifndef __custdata_interface_INTERFACE_DEFINED__
#define __custdata_interface_INTERFACE_DEFINED__

DEFINE_GUID(IID_custdata_interface, 0x786ee4ff, 0xc5dd, 0x4bf4, 0x95,0x78, 0x0d,0x22,0xfb,0x53,0x69,0xcc);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("786ee4ff-c5dd-4bf4-9578-0d22fb5369cc")
custdata_interface : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE test_method(
        int x) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(custdata_interface, 0x786ee4ff, 0xc5dd, 0x4bf4, 0x95,0x78, 0x0d,0x22,0xfb,0x53,0x69,0xcc)
#endif
#else
typedef struct custdata_interfaceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        custdata_interface *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        custdata_interface *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        custdata_interface *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        custdata_interface *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        custdata_interface *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        custdata_interface *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        custdata_interface *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** custdata_interface methods ***/
    HRESULT (STDMETHODCALLTYPE *test_method)(
        custdata_interface *This,
        int x);

    END_INTERFACE
} custdata_interfaceVtbl;

interface custdata_interface {
    CONST_VTBL custdata_interfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define custdata_interface_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define custdata_interface_AddRef(This) (This)->lpVtbl->AddRef(This)
#define custdata_interface_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define custdata_interface_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define custdata_interface_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define custdata_interface_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define custdata_interface_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** custdata_interface methods ***/
#define custdata_interface_test_method(This,x) (This)->lpVtbl->test_method(This,x)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT custdata_interface_QueryInterface(custdata_interface* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG custdata_interface_AddRef(custdata_interface* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG custdata_interface_Release(custdata_interface* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT custdata_interface_GetTypeInfoCount(custdata_interface* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT custdata_interface_GetTypeInfo(custdata_interface* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT custdata_interface_GetIDsOfNames(custdata_interface* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT custdata_interface_Invoke(custdata_interface* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** custdata_interface methods ***/
static __WIDL_INLINE HRESULT custdata_interface_test_method(custdata_interface* This,int x) {
    return This->lpVtbl->test_method(This,x);
}
#endif
#endif

#endif


#endif  /* __custdata_interface_INTERFACE_DEFINED__ */

enum custdata_enum {
    One = 0,
    Two = 1
};
struct custdata_struct {
    int test_field;
};
union custdata_union {
    int test_field;
};
typedef custdata_interface *custdata_typedef;
/*****************************************************************************
 * custdata_dispatch dispinterface
 */
#ifndef __custdata_dispatch_DISPINTERFACE_DEFINED__
#define __custdata_dispatch_DISPINTERFACE_DEFINED__

DEFINE_GUID(DIID_custdata_dispatch, 0xbffc216e, 0x2159, 0x465a, 0x80,0xdf, 0xb8,0x5f,0xd4,0xf4,0xf1,0x22);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("bffc216e-2159-465a-80df-b85fd4f4f122")
custdata_dispatch : public IDispatch
{
};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(custdata_dispatch, 0xbffc216e, 0x2159, 0x465a, 0x80,0xdf, 0xb8,0x5f,0xd4,0xf4,0xf1,0x22)
#endif
#else
typedef struct custdata_dispatchVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        custdata_dispatch *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        custdata_dispatch *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        custdata_dispatch *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        custdata_dispatch *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        custdata_dispatch *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        custdata_dispatch *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        custdata_dispatch *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    END_INTERFACE
} custdata_dispatchVtbl;

interface custdata_dispatch {
    CONST_VTBL custdata_dispatchVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define custdata_dispatch_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define custdata_dispatch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define custdata_dispatch_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define custdata_dispatch_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define custdata_dispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define custdata_dispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define custdata_dispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
#else
/*** IUnknown methods ***/
static __WIDL_INLINE HRESULT custdata_dispatch_QueryInterface(custdata_dispatch* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static __WIDL_INLINE ULONG custdata_dispatch_AddRef(custdata_dispatch* This) {
    return This->lpVtbl->AddRef(This);
}
static __WIDL_INLINE ULONG custdata_dispatch_Release(custdata_dispatch* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static __WIDL_INLINE HRESULT custdata_dispatch_GetTypeInfoCount(custdata_dispatch* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static __WIDL_INLINE HRESULT custdata_dispatch_GetTypeInfo(custdata_dispatch* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static __WIDL_INLINE HRESULT custdata_dispatch_GetIDsOfNames(custdata_dispatch* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static __WIDL_INLINE HRESULT custdata_dispatch_Invoke(custdata_dispatch* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
#endif
#endif

#endif

#endif  /* __custdata_dispatch_DISPINTERFACE_DEFINED__ */

#endif /* __Test_LIBRARY_DEFINED__ */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __test_tlb_h__ */
